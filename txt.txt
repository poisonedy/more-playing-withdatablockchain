# Palkeoramix decompiler. 

const unknown1ad9339a = 1000
const unknown20606b70 = 0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866
const unknowne7a324dc = 0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf
const BURN_ADDRESS = 57005

def storage:
  owner is addr at storage 0
  balanceOf is mapping of uint256 at storage 1
  allowance is mapping of uint256 at storage 2
  totalSupply is uint256 at storage 3
  name is array of struct at storage 4
  symbol is array of uint256 at storage 5
  decimals is uint8 at storage 6
  stor6 is uint16 at storage 6
  unknownb65d08b0 is uint16 at storage 6 offset 8
  burnRate is uint16 at storage 6 offset 24
  unknown3ff8bf2e is uint16 at storage 6 offset 40
  stor6 is uint256 at storage 6 offset 8
  stor7 is mapping of uint8 at storage 7
  unknown4a74bb02 is uint8 at storage 8
  stor9 is uint256 at storage 9 offset 1
  unknownd8248358 is uint256 at storage 9
  unknowndeb74b1bAddress is addr at storage 10
  stor11 is uint8 at storage 11 offset 160
  unknown0dde911dAddress is addr at storage 11
  stor11 is uint256 at storage 11
  operatorAddress is addr at storage 12
  delegates is mapping of addr at storage 13
  unknownf1127ed8 is mapping of struct at storage 14
  unknown6fcfff45 is mapping of uint32 at storage 15
  nonces is mapping of uint256 at storage 16

def name(): # not payable
  return name[0 len name.length].field_0

def unknown0dde911d(): # not payable
  return unknown0dde911dAddress

def totalSupply(): # not payable
  return totalSupply

def unknown269f534c(addr _param1): # not payable
  require calldata.size - 4 >= 32
  return bool(stor7[addr(_param1)])

def decimals(): # not payable
  return decimals

def unknown3ff8bf2e(): # not payable
  return unknown3ff8bf2e

def unknown4a74bb02(): # not payable
  return bool(unknown4a74bb02)

def operator(): # not payable
  return operatorAddress

def delegates(address _param1): # not payable
  require calldata.size - 4 >= 32
  return delegates[addr(_param1)]

def unknown6fcfff45(addr _param1): # not payable
  require calldata.size - 4 >= 32
  return unknown6fcfff45[_param1]

def balanceOf(address _owner): # not payable
  require calldata.size - 4 >= 32
  return balanceOf[addr(_owner)]

def nonces(address _param1): # not payable
  require calldata.size - 4 >= 32
  return nonces[_param1]

def getOwner(): # not payable
  return owner

def owner(): # not payable
  return owner

def symbol(): # not payable
  return symbol[0 len symbol.length]

def unknownb65d08b0(): # not payable
  return unknownb65d08b0

def burnRate(): # not payable
  return burnRate

def unknownd8248358(): # not payable
  return unknownd8248358

def allowance(address _owner, address _spender): # not payable
  require calldata.size - 4 >= 64
  return allowance[addr(_owner)][addr(_spender)]

def unknowndeb74b1b(): # not payable
  return unknowndeb74b1bAddress

def unknownf1127ed8(addr _param1, uint32 _param2): # not payable
  require calldata.size - 4 >= 64
  return unknownf1127ed8[_param1][_param2].field_0, unknownf1127ed8[_param1][_param2].field_256

#
#  Regular functions
#

def _fallback() payable: # default function
  revert

def renounceOwnership(): # not payable
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  log OwnershipTransferred(
        address previousOwner=owner,
        address newOwner=0)
  owner = 0

def unknownb4b5ea57(addr _param1): # not payable
  require calldata.size - 4 >= 32
  if unknown6fcfff45[addr(_param1)]:
      return unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
  else:
      return 0

def unknowna392e674(uint256 _param1): # not payable
  require calldata.size - 4 >= 32
  if operatorAddress != caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f,
                  mem[200 len 28]
  log 0x54c7a13f: unknownd8248358, _param1, caller
  unknownd8248358 = _param1

def unknown9f9a4e7f(bool _param1): # not payable
  require calldata.size - 4 >= 32
  if operatorAddress != caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f,
                  mem[200 len 28]
  log 0x3ca65588: _param1, caller
  unknown4a74bb02 = uint8(_param1)

def unknowna9e75723(): # not payable
  if not totalSupply:
      return 0
  if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  33,
                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                  mem[197 len 31]
  return (unknown3ff8bf2e * totalSupply / 10000)

def unknownc7f59a67(addr _param1, bool _param2): # not payable
  require calldata.size - 4 >= 64
  if operatorAddress != caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f,
                  mem[200 len 28]
  stor7[addr(_param1)] = uint8(_param2)

def transferOwnership(address _newOwner): # not payable
  require calldata.size - 4 >= 32
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  if not _newOwner:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  38,
                  0x734f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                  mem[202 len 26]
  log OwnershipTransferred(
        address previousOwner=owner,
        address newOwner=_newOwner)
  owner = _newOwner

def mint(uint256 _wad): # not payable
  require calldata.size - 4 >= 32
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  if not caller:
      revert with 0, 'BEP20: mint to the zero address'
  if _wad + totalSupply < totalSupply:
      revert with 0, 'SafeMath: addition overflow'
  totalSupply += _wad
  if _wad + balanceOf[caller] < balanceOf[caller]:
      revert with 0, 'SafeMath: addition overflow'
  balanceOf[caller] += _wad
  log Transfer(
        address from=_wad,
        address to=0,
        uint256 tokens=caller)
  return 1

def unknownf607f2b4(uint16 _param1): # not payable
  require calldata.size - 4 >= 32
  if operatorAddress != caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f,
                  mem[200 len 28]
  if _param1 > 100:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  65,
                  0x644c494f4e3a3a7570646174654275726e526174653a204275726e2072617465206d757374206e6f742065786365656420746865206d6178696d756d2072617465,
                  mem[229 len 31]
  log 0x3eec6963: uint16(stor6.field_0), _param1, caller
  burnRate = _param1

def unknown376c2391(uint16 _param1): # not payable
  require calldata.size - 4 >= 32
  if operatorAddress != caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f,
                  mem[200 len 28]
  if _param1 > 1000:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  80,
                  0x734c494f4e3a3a7570646174655472616e73666572546178526174653a205472616e73666572207461782072617465206d757374206e6f742065786365656420746865206d6178696d756d2072617465,
                  mem[244 len 16]
  log 0xe9d5c8ee: uint16(stor6.field_0), _param1, caller
  unknownb65d08b0 = _param1

def unknown6a141e2c(uint16 _param1): # not payable
  require calldata.size - 4 >= 32
  if operatorAddress != caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f,
                  mem[200 len 28]
  if _param1 > 10000:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  93,
                  0x644c494f4e3a3a7570646174654d61785472616e73666572416d6f756e74526174653a204d6178207472616e7366657220616d6f756e742072617465206d757374206e6f742065786365656420746865206d6178696d756d2072617465,
                  mem[257 len 3]
  log 0xb62a50fc: uint16(stor6.field_0), _param1, caller
  unknown3ff8bf2e = _param1

def transferOperator(address _newOperator): # not payable
  require calldata.size - 4 >= 32
  if operatorAddress != caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f,
                  mem[200 len 28]
  if not _newOperator:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  56,
                  0x654c494f4e3a3a7472616e736665724f70657261746f723a206e6577206f70657261746f7220697320746865207a65726f20616464726573,
                  mem[220 len 8]
  log OperatorTransferred(
        address previousOperator=operatorAddress,
        address newOperator=_newOperator)
  operatorAddress = _newOperator

def approve(address _spender, uint256 _value): # not payable
  require calldata.size - 4 >= 64
  if not caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573,
                  mem[200 len 28]
  if not _spender:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  34,
                  0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573,
                  mem[198 len 30]
  allowance[caller][addr(_spender)] = _value
  log Approval(
        address tokenOwner=_value,
        address spender=caller,
        uint256 tokens=_spender)
  return 1

def decreaseAllowance(address _spender, uint256 _subtractedValue): # not payable
  require calldata.size - 4 >= 64
  if _subtractedValue > allowance[caller][addr(_spender)]:
      revert with 0, 
                  32,
                  37,
                  0x7342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a6572,
                  mem[165 len 27],
                  mem[219 len 5]
  if not caller:
      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
  if not _spender:
      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
  allowance[caller][addr(_spender)] -= _subtractedValue
  log Approval(
        address tokenOwner=(allowance[caller][addr(_spender)] - _subtractedValue),
        address spender=caller,
        uint256 tokens=_spender)
  return 1

def increaseAllowance(address _spender, uint256 _addedValue): # not payable
  require calldata.size - 4 >= 64
  if _addedValue + allowance[caller][addr(_spender)] < allowance[caller][addr(_spender)]:
      revert with 0, 'SafeMath: addition overflow'
  if not caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573,
                  mem[200 len 28]
  if not _spender:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  34,
                  0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573,
                  mem[198 len 30]
  allowance[caller][addr(_spender)] += _addedValue
  log Approval(
        address tokenOwner=(_addedValue + allowance[caller][addr(_spender)]),
        address spender=caller,
        uint256 tokens=_spender)
  return 1

def unknownfb3957f7(addr _param1): # not payable
  require calldata.size - 4 >= 32
  if operatorAddress != caller:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  36,
                  0x726f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f,
                  mem[200 len 28]
  unknowndeb74b1bAddress = _param1
  require ext_code.size(_param1)
  static call _param1.factory() with:
          gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  require ext_code.size(unknowndeb74b1bAddress)
  static call unknowndeb74b1bAddress.WETH() with:
          gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  require ext_code.size(addr(ext_call.return_data[0]))
  static call addr(ext_call.return_data[0]).0xe6a43905 with:
          gas gas_remaining wei
         args addr(this.address), addr(ext_call.return_data[0])
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 32
  uint256(stor11.field_0) = ext_call.return_data[12 len 20] or Mask(96, 160, uint256(stor11.field_0))
  if not ext_call.return_data[12 len 20]:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  49,
                  0x654c494f4e3a3a7570646174654c696f6e53776170526f757465723a20496e76616c696420706169722061646472657373,
                  mem[213 len 15]
  log 0xd53893ab: caller, unknowndeb74b1bAddress, unknown0dde911dAddress

def unknown782d6fe1(addr _param1, uint256 _param2) payable: 
  mem[64] = 96
  require not call.value
  require calldata.size - 4 >= 64
  if _param2 >= block.number:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  39,
                  0x734c494f4e3a3a6765745072696f72566f7465733a206e6f74207965742064657465726d696e65,
                  mem[203 len 25]
  if not unknown6fcfff45[addr(_param1)]:
      return 0
  if _param2 >= unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0:
      return unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
  if _param2 < unknownf1127ed8[addr(_param1)][0].field_0:
      return 0
  idx = 0
  while uint32(unknown6fcfff45[addr(_param1)] - 1) > uint32(idx):
      _32 = mem[64]
      mem[64] = mem[64] + 64
      mem[_32] = 0
      mem[_32 + 32] = 0
      mem[0] = uint32(unknown6fcfff45[addr(_param1)] + -(uint32(unknown6fcfff45[addr(_param1)] + -idx - 1) / 2) - 1)
      mem[32] = sha3(addr(_param1), 14)
      _35 = mem[64]
      mem[64] = mem[64] + 64
      mem[_35] = unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] + -(uint32(stor15[addr(_param1)] + -idx - 1) / 2) - 1 << 224].field_0
      mem[_35 + 32] = unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] + -(uint32(stor15[addr(_param1)] + -idx - 1) / 2) - 1 << 224].field_256
      if _param2 == unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] + -(uint32(stor15[addr(_param1)] + -idx - 1) / 2) - 1 << 224].field_0:
          return unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] + -(uint32(stor15[addr(_param1)] + -idx - 1) / 2) - 1 << 224].field_256
      if _param2 <= unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] + -(uint32(stor15[addr(_param1)] + -idx - 1) / 2) - 1 << 224].field_0:
          idx = idx
          continue 
      idx = unknown6fcfff45[addr(_param1)] + -(uint32(unknown6fcfff45[addr(_param1)] + -idx - 1) / 2) - 1
      continue 
  return unknownf1127ed8[addr(_param1)][idx << 224].field_256

def mint(address _to, uint256 _amount): # not payable
  require calldata.size - 4 >= 64
  if owner != caller:
      revert with 0, 'eOwnable: caller is not the owne'
  if not _to:
      revert with 0, 'BEP20: mint to the zero address'
  if _amount + totalSupply < totalSupply:
      revert with 0, 'SafeMath: addition overflow'
  totalSupply += _amount
  if _amount + balanceOf[addr(_to)] < balanceOf[addr(_to)]:
      revert with 0, 'SafeMath: addition overflow'
  balanceOf[addr(_to)] += _amount
  log Transfer(
        address from=_amount,
        address to=0,
        uint256 tokens=_to)
  if delegates[addr(_to)]:
      if _amount > 0:
          if delegates[addr(_to)]:
              if unknown6fcfff45[stor13[addr(_to)]]:
                  if _amount + unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_256 < unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_256:
                      revert with 0, 'SafeMath: addition overflow'
                  if block.number >= 4294967296:
                      revert with 0, 
                                  32,
                                  52,
                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                  addr(0x756d626572206578636565647320333220626974, mem[180 len 12])
                  if unknown6fcfff45[stor13[addr(_to)]] <= 0:
                      unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]]].field_0 = uint32(block.number)
                      unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]]].field_256 = _amount + unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_256
                      unknown6fcfff45[stor13[addr(_to)]] = uint32(unknown6fcfff45[stor13[addr(_to)]] + 1)
                  else:
                      if unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_0 == uint32(block.number):
                          unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_256 += _amount
                      else:
                          unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]]].field_0 = uint32(block.number)
                          unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]]].field_256 = _amount + unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_256
                          unknown6fcfff45[stor13[addr(_to)]] = uint32(unknown6fcfff45[stor13[addr(_to)]] + 1)
                  log 0xdec2bacd: unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_256, _amount + unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_256, delegates[addr(_to)]
              else:
                  if _amount < 0:
                      revert with 0, 'SafeMath: addition overflow'
                  if block.number >= 4294967296:
                      revert with 0, 
                                  32,
                                  52,
                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                  addr(0x756d626572206578636565647320333220626974, mem[180 len 12])
                  if unknown6fcfff45[stor13[addr(_to)]] <= 0:
                      unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]]].field_0 = uint32(block.number)
                      unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]]].field_256 = _amount
                      unknown6fcfff45[stor13[addr(_to)]] = uint32(unknown6fcfff45[stor13[addr(_to)]] + 1)
                  else:
                      if unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_0 == uint32(block.number):
                          unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]] - 1 << 224].field_256 = _amount
                      else:
                          unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]]].field_0 = uint32(block.number)
                          unknownf1127ed8[stor13[addr(_to)]][stor15[stor13[addr(_to)]]].field_256 = _amount
                          unknown6fcfff45[stor13[addr(_to)]] = uint32(unknown6fcfff45[stor13[addr(_to)]] + 1)
                  log 0xdec2bacd: 0, _amount, delegates[addr(_to)]

def delegate(address _to): # not payable
  require calldata.size - 4 >= 32
  delegates[caller] = _to
  log 0x3134e8a2: caller, delegates[caller], _to
  if delegates[caller] != _to:
      if balanceOf[caller] > 0:
          if not delegates[caller]:
              if _to:
                  if unknown6fcfff45[addr(_to)]:
                      if balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 < unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256:
                          revert with 0, 'SafeMath: addition overflow'
                      if block.number >= 4294967296:
                          revert with 0, 
                                      32,
                                      52,
                                      0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                      addr(0x756d626572206578636565647320333220626974, mem[180 len 12])
                      if unknown6fcfff45[addr(_to)] <= 0:
                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                      else:
                          if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                              unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 += balanceOf[caller]
                          else:
                              unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                              unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                              unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                      log 0xdec2bacd: unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, _to
                  else:
                      if balanceOf[caller] < 0:
                          revert with 0, 'SafeMath: addition overflow'
                      if block.number >= 4294967296:
                          revert with 0, 
                                      32,
                                      52,
                                      0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                      addr(0x756d626572206578636565647320333220626974, mem[180 len 12])
                      if unknown6fcfff45[addr(_to)] <= 0:
                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                      else:
                          if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                              unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 = balanceOf[caller]
                          else:
                              unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                              unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                              unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                      log 0xdec2bacd: 0, balanceOf[caller], _to
          else:
              if unknown6fcfff45[stor13[caller]]:
                  if balanceOf[caller] > unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if block.number >= 4294967296:
                      revert with 0, 
                                  32,
                                  52,
                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                  addr(0x756d626572206578636565647320333220626974, mem[180 len 12])
                  if unknown6fcfff45[stor13[caller]] <= 0:
                      unknownf1127ed8[stor13[caller]][stor15[stor13[caller]]].field_0 = uint32(block.number)
                      unknownf1127ed8[stor13[caller]][stor15[stor13[caller]]].field_256 = unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256 - balanceOf[caller]
                      unknown6fcfff45[stor13[caller]] = uint32(unknown6fcfff45[stor13[caller]] + 1)
                      log 0xdec2bacd: unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256, unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256 - balanceOf[caller], delegates[caller]
                      if _to:
                          if unknown6fcfff45[addr(_to)]:
                              if balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 < unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256:
                                  revert with 0, 'SafeMath: addition overflow'
                              if block.number >= 4294967296:
                                  revert with 0, 
                                              32,
                                              52,
                                              0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                              addr(0x756d626572206578636565647320333220626974, mem[340 len 12])
                              if unknown6fcfff45[addr(_to)] <= 0:
                                  unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                  unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                  unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                              else:
                                  if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 += balanceOf[caller]
                                  else:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                              log 0xdec2bacd: unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, _to
                          else:
                              if balanceOf[caller] < 0:
                                  revert with 0, 'SafeMath: addition overflow'
                              if block.number >= 4294967296:
                                  revert with 0, 
                                              32,
                                              52,
                                              0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                              addr(0x756d626572206578636565647320333220626974, mem[340 len 12])
                              if unknown6fcfff45[addr(_to)] <= 0:
                                  unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                  unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                  unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                              else:
                                  if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 = balanceOf[caller]
                                  else:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                              log 0xdec2bacd: 0, balanceOf[caller], _to
                  else:
                      if unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_0 == uint32(block.number):
                          unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256 -= balanceOf[caller]
                          log 0xdec2bacd: unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256, unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256 - balanceOf[caller], delegates[caller]
                          if _to:
                              if unknown6fcfff45[addr(_to)]:
                                  if balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 < unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[276 len 12])
                                  if unknown6fcfff45[addr(_to)] <= 0:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 += balanceOf[caller]
                                      else:
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  log 0xdec2bacd: unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, _to
                              else:
                                  if balanceOf[caller] < 0:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[276 len 12])
                                  if unknown6fcfff45[addr(_to)] <= 0:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 = balanceOf[caller]
                                      else:
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  log 0xdec2bacd: 0, balanceOf[caller], _to
                      else:
                          unknownf1127ed8[stor13[caller]][stor15[stor13[caller]]].field_0 = uint32(block.number)
                          unknownf1127ed8[stor13[caller]][stor15[stor13[caller]]].field_256 = unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256 - balanceOf[caller]
                          unknown6fcfff45[stor13[caller]] = uint32(unknown6fcfff45[stor13[caller]] + 1)
                          log 0xdec2bacd: unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256, unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256 - balanceOf[caller], delegates[caller]
                          if _to:
                              if unknown6fcfff45[addr(_to)]:
                                  if balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 < unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[340 len 12])
                                  if unknown6fcfff45[addr(_to)] <= 0:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 += balanceOf[caller]
                                      else:
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  log 0xdec2bacd: unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, _to
                              else:
                                  if balanceOf[caller] < 0:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[340 len 12])
                                  if unknown6fcfff45[addr(_to)] <= 0:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 = balanceOf[caller]
                                      else:
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  log 0xdec2bacd: 0, balanceOf[caller], _to
              else:
                  if balanceOf[caller] > 0:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if block.number >= 4294967296:
                      revert with 0, 
                                  32,
                                  52,
                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                  addr(0x756d626572206578636565647320333220626974, mem[180 len 12])
                  if unknown6fcfff45[stor13[caller]] <= 0:
                      unknownf1127ed8[stor13[caller]][stor15[stor13[caller]]].field_0 = uint32(block.number)
                      unknownf1127ed8[stor13[caller]][stor15[stor13[caller]]].field_256 = -balanceOf[caller]
                      unknown6fcfff45[stor13[caller]] = uint32(unknown6fcfff45[stor13[caller]] + 1)
                      log 0xdec2bacd: 0, -balanceOf[caller], delegates[caller]
                      if _to:
                          if unknown6fcfff45[addr(_to)]:
                              if balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 < unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256:
                                  revert with 0, 'SafeMath: addition overflow'
                              if block.number >= 4294967296:
                                  revert with 0, 
                                              32,
                                              52,
                                              0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                              addr(0x756d626572206578636565647320333220626974, mem[340 len 12])
                              if unknown6fcfff45[addr(_to)] <= 0:
                                  unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                  unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                  unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                              else:
                                  if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 += balanceOf[caller]
                                  else:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                              log 0xdec2bacd: unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, _to
                          else:
                              if balanceOf[caller] < 0:
                                  revert with 0, 'SafeMath: addition overflow'
                              if block.number >= 4294967296:
                                  revert with 0, 
                                              32,
                                              52,
                                              0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                              addr(0x756d626572206578636565647320333220626974, mem[340 len 12])
                              if unknown6fcfff45[addr(_to)] <= 0:
                                  unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                  unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                  unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                              else:
                                  if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 = balanceOf[caller]
                                  else:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                              log 0xdec2bacd: 0, balanceOf[caller], _to
                  else:
                      if unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_0 == uint32(block.number):
                          unknownf1127ed8[stor13[caller]][stor15[stor13[caller]] - 1 << 224].field_256 = -balanceOf[caller]
                          log 0xdec2bacd: 0, -balanceOf[caller], delegates[caller]
                          if _to:
                              if unknown6fcfff45[addr(_to)]:
                                  if balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 < unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[276 len 12])
                                  if unknown6fcfff45[addr(_to)] <= 0:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 += balanceOf[caller]
                                      else:
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  log 0xdec2bacd: unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, _to
                              else:
                                  if balanceOf[caller] < 0:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[276 len 12])
                                  if unknown6fcfff45[addr(_to)] <= 0:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 = balanceOf[caller]
                                      else:
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  log 0xdec2bacd: 0, balanceOf[caller], _to
                      else:
                          unknownf1127ed8[stor13[caller]][stor15[stor13[caller]]].field_0 = uint32(block.number)
                          unknownf1127ed8[stor13[caller]][stor15[stor13[caller]]].field_256 = -balanceOf[caller]
                          unknown6fcfff45[stor13[caller]] = uint32(unknown6fcfff45[stor13[caller]] + 1)
                          log 0xdec2bacd: 0, -balanceOf[caller], delegates[caller]
                          if _to:
                              if unknown6fcfff45[addr(_to)]:
                                  if balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 < unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[340 len 12])
                                  if unknown6fcfff45[addr(_to)] <= 0:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 += balanceOf[caller]
                                      else:
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256
                                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  log 0xdec2bacd: unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, balanceOf[caller] + unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256, _to
                              else:
                                  if balanceOf[caller] < 0:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[340 len 12])
                                  if unknown6fcfff45[addr(_to)] <= 0:
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                      unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)] - 1 << 224].field_256 = balanceOf[caller]
                                      else:
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_to)][stor15[addr(_to)]].field_256 = balanceOf[caller]
                                          unknown6fcfff45[addr(_to)] = uint32(unknown6fcfff45[addr(_to)] + 1)
                                  log 0xdec2bacd: 0, balanceOf[caller], _to

def unknownc3cda520(addr _param1, uint256 _param2, uint256 _param3, uint8 _param4, uint256 _param5, uint256 _param6): # not payable
  require calldata.size - 4 >= 192
  mem[128] = uint256(name.field_0)
  idx = 128
  s = 0
  while name.length + 96 > idx:
      mem[idx + 32] = name[s].field_256
      idx = idx + 32
      s = s + 1
      continue 
  signer = erecover(sha3(0, sha3(0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866, sha3(mem[128 len name.length]), chainid, this.address), sha3(0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf, addr(_param1), _param2, _param3)), _param4 << 248, _param5, _param6) # precompiled
  if not erecover.result:
      revert with ext_call.return_data[0 len return_data.size]
  if not addr(signer):
      revert with 0, 
                  32,
                  38,
                  0x774c494f4e3a3a64656c656761746542795369673a20696e76616c6964207369676e61747572,
                  Mask(176, 0, _param6),
                  mem[ceil32(name.length) + 706 len 4]
  nonces[addr(signer)]++
  if _param2 != nonces[addr(signer)]:
      revert with 0, 
                  32,
                  34,
                  0x734c494f4e3a3a64656c656761746542795369673a20696e76616c6964206e6f6e63,
                  Mask(208, 0, _param6),
                  mem[ceil32(name.length) + 706 len 4]
  if block.timestamp > _param3:
      revert with 0, 
                  32,
                  38,
                  0x2e4c494f4e3a3a64656c656761746542795369673a207369676e617475726520657870697265,
                  Mask(176, 0, _param6),
                  mem[ceil32(name.length) + 706 len 4]
  delegates[addr(signer)] = _param1
  log 0x3134e8a2: addr(signer), delegates[addr(signer)], _param1
  if delegates[addr(signer)] != _param1:
      if balanceOf[addr(signer)] > 0:
          if not delegates[addr(signer)]:
              if _param1:
                  if unknown6fcfff45[addr(_param1)]:
                      if balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 < unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256:
                          revert with 0, 'SafeMath: addition overflow'
                      if block.number >= 4294967296:
                          revert with 0, 
                                      32,
                                      52,
                                      0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                      addr(0x756d626572206578636565647320333220626974, Mask(96, 0, _param5))
                      if unknown6fcfff45[addr(_param1)] <= 0:
                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                      else:
                          if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                              unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 += balanceOf[addr(signer)]
                          else:
                              unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                              unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                              unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                      log 0xdec2bacd: unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, _param1
                  else:
                      if balanceOf[addr(signer)] < 0:
                          revert with 0, 'SafeMath: addition overflow'
                      if block.number >= 4294967296:
                          revert with 0, 
                                      32,
                                      52,
                                      0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                      addr(0x756d626572206578636565647320333220626974, Mask(96, 0, _param5))
                      if unknown6fcfff45[addr(_param1)] <= 0:
                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                      else:
                          if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                              unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 = balanceOf[addr(signer)]
                          else:
                              unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                              unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                              unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                      log 0xdec2bacd: 0, balanceOf[addr(signer)], _param1
          else:
              if unknown6fcfff45[stor13[addr(signer)]]:
                  if balanceOf[addr(signer)] > unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if block.number >= 4294967296:
                      revert with 0, 
                                  32,
                                  52,
                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                  addr(0x756d626572206578636565647320333220626974, Mask(96, 0, _param5))
                  if unknown6fcfff45[stor13[addr(signer)]] <= 0:
                      unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]]].field_0 = uint32(block.number)
                      unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]]].field_256 = unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256 - balanceOf[addr(signer)]
                      unknown6fcfff45[stor13[addr(signer)]] = uint32(unknown6fcfff45[stor13[addr(signer)]] + 1)
                      log 0xdec2bacd: unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256, unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256 - balanceOf[addr(signer)], delegates[addr(signer)]
                      if _param1:
                          if unknown6fcfff45[addr(_param1)]:
                              if balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 < unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256:
                                  revert with 0, 'SafeMath: addition overflow'
                              if block.number >= 4294967296:
                                  revert with 0, 
                                              32,
                                              52,
                                              0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                              addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 822 len 12])
                              if unknown6fcfff45[addr(_param1)] <= 0:
                                  unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                  unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                  unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                              else:
                                  if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 += balanceOf[addr(signer)]
                                  else:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                              log 0xdec2bacd: unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, _param1
                          else:
                              if balanceOf[addr(signer)] < 0:
                                  revert with 0, 'SafeMath: addition overflow'
                              if block.number >= 4294967296:
                                  revert with 0, 
                                              32,
                                              52,
                                              0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                              addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 822 len 12])
                              if unknown6fcfff45[addr(_param1)] <= 0:
                                  unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                  unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                  unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                              else:
                                  if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 = balanceOf[addr(signer)]
                                  else:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                              log 0xdec2bacd: 0, balanceOf[addr(signer)], _param1
                  else:
                      if unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_0 == uint32(block.number):
                          unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256 -= balanceOf[addr(signer)]
                          log 0xdec2bacd: unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256, unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256 - balanceOf[addr(signer)], delegates[addr(signer)]
                          if _param1:
                              if unknown6fcfff45[addr(_param1)]:
                                  if balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 < unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 758 len 12])
                                  if unknown6fcfff45[addr(_param1)] <= 0:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 += balanceOf[addr(signer)]
                                      else:
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  log 0xdec2bacd: unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, _param1
                              else:
                                  if balanceOf[addr(signer)] < 0:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 758 len 12])
                                  if unknown6fcfff45[addr(_param1)] <= 0:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 = balanceOf[addr(signer)]
                                      else:
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  log 0xdec2bacd: 0, balanceOf[addr(signer)], _param1
                      else:
                          unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]]].field_0 = uint32(block.number)
                          unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]]].field_256 = unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256 - balanceOf[addr(signer)]
                          unknown6fcfff45[stor13[addr(signer)]] = uint32(unknown6fcfff45[stor13[addr(signer)]] + 1)
                          log 0xdec2bacd: unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256, unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256 - balanceOf[addr(signer)], delegates[addr(signer)]
                          if _param1:
                              if unknown6fcfff45[addr(_param1)]:
                                  if balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 < unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 822 len 12])
                                  if unknown6fcfff45[addr(_param1)] <= 0:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 += balanceOf[addr(signer)]
                                      else:
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  log 0xdec2bacd: unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, _param1
                              else:
                                  if balanceOf[addr(signer)] < 0:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 822 len 12])
                                  if unknown6fcfff45[addr(_param1)] <= 0:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 = balanceOf[addr(signer)]
                                      else:
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  log 0xdec2bacd: 0, balanceOf[addr(signer)], _param1
              else:
                  if balanceOf[addr(signer)] > 0:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if block.number >= 4294967296:
                      revert with 0, 
                                  32,
                                  52,
                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                  addr(0x756d626572206578636565647320333220626974, Mask(96, 0, _param5))
                  if unknown6fcfff45[stor13[addr(signer)]] <= 0:
                      unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]]].field_0 = uint32(block.number)
                      unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]]].field_256 = -balanceOf[addr(signer)]
                      unknown6fcfff45[stor13[addr(signer)]] = uint32(unknown6fcfff45[stor13[addr(signer)]] + 1)
                      log 0xdec2bacd: 0, -balanceOf[addr(signer)], delegates[addr(signer)]
                      if _param1:
                          if unknown6fcfff45[addr(_param1)]:
                              if balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 < unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256:
                                  revert with 0, 'SafeMath: addition overflow'
                              if block.number >= 4294967296:
                                  revert with 0, 
                                              32,
                                              52,
                                              0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                              addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 822 len 12])
                              if unknown6fcfff45[addr(_param1)] <= 0:
                                  unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                  unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                  unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                              else:
                                  if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 += balanceOf[addr(signer)]
                                  else:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                              log 0xdec2bacd: unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, _param1
                          else:
                              if balanceOf[addr(signer)] < 0:
                                  revert with 0, 'SafeMath: addition overflow'
                              if block.number >= 4294967296:
                                  revert with 0, 
                                              32,
                                              52,
                                              0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                              addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 822 len 12])
                              if unknown6fcfff45[addr(_param1)] <= 0:
                                  unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                  unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                  unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                              else:
                                  if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 = balanceOf[addr(signer)]
                                  else:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                              log 0xdec2bacd: 0, balanceOf[addr(signer)], _param1
                  else:
                      if unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_0 == uint32(block.number):
                          unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]] - 1 << 224].field_256 = -balanceOf[addr(signer)]
                          log 0xdec2bacd: 0, -balanceOf[addr(signer)], delegates[addr(signer)]
                          if _param1:
                              if unknown6fcfff45[addr(_param1)]:
                                  if balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 < unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 758 len 12])
                                  if unknown6fcfff45[addr(_param1)] <= 0:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 += balanceOf[addr(signer)]
                                      else:
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  log 0xdec2bacd: unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, _param1
                              else:
                                  if balanceOf[addr(signer)] < 0:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 758 len 12])
                                  if unknown6fcfff45[addr(_param1)] <= 0:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 = balanceOf[addr(signer)]
                                      else:
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  log 0xdec2bacd: 0, balanceOf[addr(signer)], _param1
                      else:
                          unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]]].field_0 = uint32(block.number)
                          unknownf1127ed8[stor13[addr(signer)]][stor15[stor13[addr(signer)]]].field_256 = -balanceOf[addr(signer)]
                          unknown6fcfff45[stor13[addr(signer)]] = uint32(unknown6fcfff45[stor13[addr(signer)]] + 1)
                          log 0xdec2bacd: 0, -balanceOf[addr(signer)], delegates[addr(signer)]
                          if _param1:
                              if unknown6fcfff45[addr(_param1)]:
                                  if balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 < unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 822 len 12])
                                  if unknown6fcfff45[addr(_param1)] <= 0:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 += balanceOf[addr(signer)]
                                      else:
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256
                                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  log 0xdec2bacd: unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, balanceOf[addr(signer)] + unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256, _param1
                              else:
                                  if balanceOf[addr(signer)] < 0:
                                      revert with 0, 'SafeMath: addition overflow'
                                  if block.number >= 4294967296:
                                      revert with 0, 
                                                  32,
                                                  52,
                                                  0x6f4c494f4e3a3a5f7772697465436865636b706f696e743a20626c6f636b206e,
                                                  addr(0x756d626572206578636565647320333220626974, mem[ceil32(name.length) + 822 len 12])
                                  if unknown6fcfff45[addr(_param1)] <= 0:
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                      unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                      unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  else:
                                      if unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_0 == uint32(block.number):
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)] - 1 << 224].field_256 = balanceOf[addr(signer)]
                                      else:
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_0 = uint32(block.number)
                                          unknownf1127ed8[addr(_param1)][stor15[addr(_param1)]].field_256 = balanceOf[addr(signer)]
                                          unknown6fcfff45[addr(_param1)] = uint32(unknown6fcfff45[addr(_param1)] + 1)
                                  log 0xdec2bacd: 0, balanceOf[addr(signer)], _param1

def transfer(address _to, uint256 _value): # not payable
  require calldata.size - 4 >= 64
  if not totalSupply:
      if bool(unknown4a74bb02) != 1:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[this.address] < balanceOf[this.address]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(this.address)] = balanceOf[this.address]
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=this.address)
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      if unknownb65d08b0 * _value / 10000 <= balanceOf[caller]:
                          balanceOf[caller] -= unknownb65d08b0 * _value / 10000
                          if (unknownb65d08b0 * _value / 10000) + balanceOf[this.address] < balanceOf[this.address]:
                              revert with 0, 'SafeMath: addition overflow'
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      if (unknownb65d08b0 * _value / 10000) - (burnRate * unknownb65d08b0 * _value / 10000 / 100) <= balanceOf[caller]:
                          balanceOf[caller] = balanceOf[caller] - (unknownb65d08b0 * _value / 10000) + (burnRate * unknownb65d08b0 * _value / 10000 / 100)
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if uint8(stor11.field_160):
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[this.address] < balanceOf[this.address]:
                          revert with 0, 'SafeMath: addition overflow'
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      if unknownb65d08b0 * _value / 10000 <= balanceOf[caller]:
                          balanceOf[caller] -= unknownb65d08b0 * _value / 10000
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      if (unknownb65d08b0 * _value / 10000) - (burnRate * unknownb65d08b0 * _value / 10000 / 100) <= balanceOf[caller]:
                          balanceOf[caller] = balanceOf[caller] - (unknownb65d08b0 * _value / 10000) + (burnRate * unknownb65d08b0 * _value / 10000 / 100)
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if not unknowndeb74b1bAddress:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  if 0 <= balanceOf[caller]:
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      if unknownb65d08b0 * _value / 10000 <= balanceOf[caller]:
                          balanceOf[caller] -= unknownb65d08b0 * _value / 10000
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if not unknown0dde911dAddress:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if unknown0dde911dAddress == caller:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if caller == owner:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      uint8(stor11.field_160) = 1
      unknownb65d08b0 = 0
      if not totalSupply:
          if balanceOf[addr(this.address)] > 0:
              if 0 >= unknownd8248358:
                  if stor9 > unknownd8248358:
                      revert with 0, 'SafeMath: subtraction overflow'
                  require ext_code.size(unknowndeb74b1bAddress)
                  static call unknowndeb74b1bAddress.WETH() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not this.address:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                  if not unknowndeb74b1bAddress:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                  allowance[addr(this.address)][stor10] = stor9
                  log Approval(
                        address tokenOwner=stor9,
                        address spender=this.address,
                        uint256 tokens=unknowndeb74b1bAddress)
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
          else:
              if balanceOf[addr(this.address)] >= unknownd8248358:
                  if stor9 > unknownd8248358:
                      revert with 0, 'SafeMath: subtraction overflow'
                  require ext_code.size(unknowndeb74b1bAddress)
                  static call unknowndeb74b1bAddress.WETH() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not this.address:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                  if not unknowndeb74b1bAddress:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                  allowance[addr(this.address)][stor10] = stor9
                  log Approval(
                        address tokenOwner=stor9,
                        address spender=this.address,
                        uint256 tokens=unknowndeb74b1bAddress)
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      else:
          if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          32,
                          33,
                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                          mem[197 len 31]
          if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
              if unknown3ff8bf2e * totalSupply / 10000 >= unknownd8248358:
                  if stor9 > unknownd8248358:
                      revert with 0, 'SafeMath: subtraction overflow'
                  require ext_code.size(unknowndeb74b1bAddress)
                  static call unknowndeb74b1bAddress.WETH() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not this.address:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                  if not unknowndeb74b1bAddress:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                  allowance[addr(this.address)][stor10] = stor9
                  log Approval(
                        address tokenOwner=stor9,
                        address spender=this.address,
                        uint256 tokens=unknowndeb74b1bAddress)
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
          else:
              if balanceOf[addr(this.address)] >= unknownd8248358:
                  if stor9 > unknownd8248358:
                      revert with 0, 'SafeMath: subtraction overflow'
                  require ext_code.size(unknowndeb74b1bAddress)
                  static call unknowndeb74b1bAddress.WETH() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not this.address:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                  if not unknowndeb74b1bAddress:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                  allowance[addr(this.address)][stor10] = stor9
                  log Approval(
                        address tokenOwner=stor9,
                        address spender=this.address,
                        uint256 tokens=unknowndeb74b1bAddress)
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      Mask(248, 0, stor6.field_8) = unknownb65d08b0
      uint8(stor11.field_160) = 0
      if _to != 57005:
          if unknownb65d08b0:
              if _value:
                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if unknownb65d08b0 * _value / 10000:
                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if not caller:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      37,
                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                      mem[201 len 27]
      if not _to:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      35,
                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                      mem[199 len 29]
      if _value > balanceOf[caller]:
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      balanceOf[caller] -= _value
      if _value + balanceOf[_to] < balanceOf[_to]:
          revert with 0, 'SafeMath: addition overflow'
      balanceOf[addr(_to)] = _value + balanceOf[_to]
      log Transfer(
            address from=_value,
            address to=caller,
            uint256 tokens=_to)
      return 1
  if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                  32,
                  33,
                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                  mem[197 len 31]
  if unknown3ff8bf2e * totalSupply / 10000 <= 0:
      if bool(unknown4a74bb02) != 1:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[this.address] < balanceOf[this.address]:
                          revert with 0, 'SafeMath: addition overflow'
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      if unknownb65d08b0 * _value / 10000 <= balanceOf[caller]:
                          balanceOf[caller] -= unknownb65d08b0 * _value / 10000
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      if (unknownb65d08b0 * _value / 10000) - (burnRate * unknownb65d08b0 * _value / 10000 / 100) <= balanceOf[caller]:
                          balanceOf[caller] = balanceOf[caller] - (unknownb65d08b0 * _value / 10000) + (burnRate * unknownb65d08b0 * _value / 10000 / 100)
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if uint8(stor11.field_160):
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  if 0 <= balanceOf[caller]:
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      if unknownb65d08b0 * _value / 10000 <= balanceOf[caller]:
                          balanceOf[caller] -= unknownb65d08b0 * _value / 10000
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if not unknowndeb74b1bAddress:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if not unknown0dde911dAddress:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if unknown0dde911dAddress == caller:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if caller == owner:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      uint8(stor11.field_160) = 1
      unknownb65d08b0 = 0
      if not totalSupply:
          if balanceOf[addr(this.address)] > 0:
              if 0 >= unknownd8248358:
                  if stor9 > unknownd8248358:
                      revert with 0, 'SafeMath: subtraction overflow'
                  require ext_code.size(unknowndeb74b1bAddress)
                  static call unknowndeb74b1bAddress.WETH() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not this.address:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                  if not unknowndeb74b1bAddress:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                  allowance[addr(this.address)][stor10] = stor9
                  log Approval(
                        address tokenOwner=stor9,
                        address spender=this.address,
                        uint256 tokens=unknowndeb74b1bAddress)
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
          else:
              if balanceOf[addr(this.address)] >= unknownd8248358:
                  if stor9 > unknownd8248358:
                      revert with 0, 'SafeMath: subtraction overflow'
                  require ext_code.size(unknowndeb74b1bAddress)
                  static call unknowndeb74b1bAddress.WETH() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not this.address:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                  if not unknowndeb74b1bAddress:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                  allowance[addr(this.address)][stor10] = stor9
                  log Approval(
                        address tokenOwner=stor9,
                        address spender=this.address,
                        uint256 tokens=unknowndeb74b1bAddress)
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      else:
          if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                          32,
                          33,
                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                          mem[197 len 31]
          if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
              if unknown3ff8bf2e * totalSupply / 10000 >= unknownd8248358:
                  if stor9 > unknownd8248358:
                      revert with 0, 'SafeMath: subtraction overflow'
                  require ext_code.size(unknowndeb74b1bAddress)
                  static call unknowndeb74b1bAddress.WETH() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not this.address:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                  if not unknowndeb74b1bAddress:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                  allowance[addr(this.address)][stor10] = stor9
                  log Approval(
                        address tokenOwner=stor9,
                        address spender=this.address,
                        uint256 tokens=unknowndeb74b1bAddress)
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
          else:
              if balanceOf[addr(this.address)] >= unknownd8248358:
                  if stor9 > unknownd8248358:
                      revert with 0, 'SafeMath: subtraction overflow'
                  require ext_code.size(unknowndeb74b1bAddress)
                  static call unknowndeb74b1bAddress.WETH() with:
                          gas gas_remaining wei
                  if not ext_call.success:
                      revert with ext_call.return_data[0 len return_data.size]
                  require return_data.size >= 32
                  if not this.address:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                  if not unknowndeb74b1bAddress:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                  allowance[addr(this.address)][stor10] = stor9
                  log Approval(
                        address tokenOwner=stor9,
                        address spender=this.address,
                        uint256 tokens=unknowndeb74b1bAddress)
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      Mask(248, 0, stor6.field_8) = unknownb65d08b0
      uint8(stor11.field_160) = 0
      if _to != 57005:
          if unknownb65d08b0:
              if _value:
                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if unknownb65d08b0 * _value / 10000:
                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      if not caller:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      37,
                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                      mem[201 len 27]
      if not _to:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      35,
                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                      mem[199 len 29]
      if _value > balanceOf[caller]:
          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
      balanceOf[caller] -= _value
      if _value + balanceOf[_to] < balanceOf[_to]:
          revert with 0, 'SafeMath: addition overflow'
      balanceOf[addr(_to)] = _value + balanceOf[_to]
      log Transfer(
            address from=_value,
            address to=caller,
            uint256 tokens=_to)
      return 1
  if stor7[caller]:
      if bool(unknown4a74bb02) != 1:
          if 57005 == _to:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not unknownb65d08b0:
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[caller] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=caller,
                    uint256 tokens=_to)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not caller:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[caller]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=caller,
                        uint256 tokens=57005)
                  if not caller:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
      else:
          if uint8(stor11.field_160):
              if 57005 == _to:
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if not _to:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  35,
                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                  mem[199 len 29]
                  if _value > balanceOf[caller]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  balanceOf[caller] -= _value
                  if _value + balanceOf[_to] < balanceOf[_to]:
                      revert with 0, 'SafeMath: addition overflow'
                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                  log Transfer(
                        address from=_value,
                        address to=caller,
                        uint256 tokens=_to)
                  return 1
              if not unknownb65d08b0:
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if not _to:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  35,
                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                  mem[199 len 29]
                  if _value > balanceOf[caller]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  balanceOf[caller] -= _value
                  if _value + balanceOf[_to] < balanceOf[_to]:
                      revert with 0, 'SafeMath: addition overflow'
                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                  log Transfer(
                        address from=_value,
                        address to=caller,
                        uint256 tokens=_to)
                  return 1
              if not _value:
                  if 0 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if not unknownb65d08b0 * _value / 10000:
                      if 0 > unknownb65d08b0 * _value / 10000:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[caller]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=caller,
                                uint256 tokens=57005)
                          if not caller:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  else:
                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                          balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                          if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                          log Transfer(
                                address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                address to=caller,
                                uint256 tokens=57005)
                          if not caller:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if not unknowndeb74b1bAddress:
                  if 57005 == _to:
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not unknownb65d08b0:
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not _value:
                      if 0 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[caller]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=caller,
                                uint256 tokens=57005)
                          if not caller:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  else:
                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if not unknownb65d08b0 * _value / 10000:
                          if 0 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[caller]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=caller,
                                    uint256 tokens=57005)
                              if not caller:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                              if not this.address:
                                  revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      else:
                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                              balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                              if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                              log Transfer(
                                    address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                    address to=caller,
                                    uint256 tokens=57005)
                              if not caller:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
              else:
                  if not unknown0dde911dAddress:
                      if 57005 == _to:
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if not unknownb65d08b0:
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if not _value:
                          if 0 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[caller]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=caller,
                                    uint256 tokens=57005)
                              if not caller:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                              if not this.address:
                                  revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      else:
                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if not unknownb65d08b0 * _value / 10000:
                              if 0 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[caller]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=caller,
                                        uint256 tokens=57005)
                                  if not caller:
                                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          else:
                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                                  balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  log Transfer(
                                        address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                        address to=caller,
                                        uint256 tokens=57005)
                  else:
                      if unknown0dde911dAddress == caller:
                          if 57005 == _to:
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[caller] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=caller,
                                    uint256 tokens=_to)
                              return 1
                          if not unknownb65d08b0:
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[caller] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=caller,
                                    uint256 tokens=_to)
                              return 1
                          if not _value:
                              if 0 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[caller]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=caller,
                                        uint256 tokens=57005)
                                  if not caller:
                                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          else:
                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if not unknownb65d08b0 * _value / 10000:
                                  if 0 > unknownb65d08b0 * _value / 10000:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if 0 <= balanceOf[caller]:
                                      if balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      log Transfer(
                                            address from=0,
                                            address to=caller,
                                            uint256 tokens=57005)
                              else:
                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      log Transfer(
                                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                            address to=caller,
                                            uint256 tokens=57005)
                      else:
                          if caller == owner:
                              if 57005 == _to:
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value > balanceOf[caller]:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  balanceOf[caller] -= _value
                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                  log Transfer(
                                        address from=_value,
                                        address to=caller,
                                        uint256 tokens=_to)
                                  return 1
                              if not unknownb65d08b0:
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value > balanceOf[caller]:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  balanceOf[caller] -= _value
                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                  log Transfer(
                                        address from=_value,
                                        address to=caller,
                                        uint256 tokens=_to)
                                  return 1
                              if not _value:
                                  if 0 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if 0 <= balanceOf[caller]:
                                      if balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      log Transfer(
                                            address from=0,
                                            address to=caller,
                                            uint256 tokens=57005)
                              else:
                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if not unknownb65d08b0 * _value / 10000:
                                      if 0 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not caller:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[caller]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not caller:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                                          balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                          else:
                              uint8(stor11.field_160) = 1
                              unknownb65d08b0 = 0
                              if not totalSupply:
                                  if balanceOf[addr(this.address)] > 0:
                                      if 0 >= unknownd8248358:
                                          if stor9 > unknownd8248358:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          require ext_code.size(unknowndeb74b1bAddress)
                                          static call unknowndeb74b1bAddress.WETH() with:
                                                  gas gas_remaining wei
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >= 32
                                          if not this.address:
                                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                          if not unknowndeb74b1bAddress:
                                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                          allowance[addr(this.address)][stor10] = stor9
                                          log Approval(
                                                address tokenOwner=stor9,
                                                address spender=this.address,
                                                uint256 tokens=unknowndeb74b1bAddress)
                                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  else:
                                      if balanceOf[addr(this.address)] >= unknownd8248358:
                                          if stor9 > unknownd8248358:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          require ext_code.size(unknowndeb74b1bAddress)
                                          static call unknowndeb74b1bAddress.WETH() with:
                                                  gas gas_remaining wei
                                          if not ext_call.success:
                                              revert with ext_call.return_data[0 len return_data.size]
                                          require return_data.size >= 32
                                          if not this.address:
                                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                          if not unknowndeb74b1bAddress:
                                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                          allowance[addr(this.address)][stor10] = stor9
                                          log Approval(
                                                address tokenOwner=stor9,
                                                address spender=this.address,
                                                uint256 tokens=unknowndeb74b1bAddress)
                                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if _to != 57005:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if unknownb65d08b0 * _value / 10000:
                                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value > balanceOf[caller]:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  balanceOf[caller] -= _value
                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                  log Transfer(
                                        address from=_value,
                                        address to=caller,
                                        uint256 tokens=_to)
                                  return 1
                              if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
                                  if unknown3ff8bf2e * totalSupply / 10000 >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                      if not unknowndeb74b1bAddress:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                      allowance[addr(this.address)][stor10] = stor9
                                      log Approval(
                                            address tokenOwner=stor9,
                                            address spender=this.address,
                                            uint256 tokens=unknowndeb74b1bAddress)
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not caller:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value > balanceOf[caller]:
                                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                          balanceOf[caller] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=caller,
                                                uint256 tokens=_to)
                                          return 1
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if unknownb65d08b0 * _value / 10000:
                                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                      else:
                                          if not caller:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[caller]:
                                              balanceOf[caller] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=caller,
                                                    uint256 tokens=_to)
                              else:
                                  if balanceOf[addr(this.address)] >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                      if not unknowndeb74b1bAddress:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                      allowance[addr(this.address)][stor10] = stor9
                                      log Approval(
                                            address tokenOwner=stor9,
                                            address spender=this.address,
                                            uint256 tokens=unknowndeb74b1bAddress)
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not caller:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value > balanceOf[caller]:
                                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                          balanceOf[caller] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=caller,
                                                uint256 tokens=_to)
                                          return 1
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if unknownb65d08b0 * _value / 10000:
                                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                      else:
                                          if not caller:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[caller]:
                                              balanceOf[caller] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=caller,
                                                    uint256 tokens=_to)
  else:
      if not stor7[addr(_to)]:
          if totalSupply:
              if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if _value > unknown3ff8bf2e * totalSupply / 10000:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              62,
                              0x2e4c494f4e3a3a616e74695768616c653a205472616e7366657220616d6f756e74206578636565647320746865206d61785472616e73666572416d6f756e,
                              mem[226 len 2]
              if bool(unknown4a74bb02) != 1:
                  if 57005 == _to:
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not unknownb65d08b0:
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not _value:
                      if 0 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                  else:
                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if not unknownb65d08b0 * _value / 10000:
                          if 0 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                      else:
                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
              else:
                  if uint8(stor11.field_160):
                      if _to != 57005:
                          if unknownb65d08b0:
                              if not _value:
                                  if 0 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                              else:
                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if unknownb65d08b0 * _value / 10000:
                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if 0 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not unknowndeb74b1bAddress:
                      if _to != 57005:
                          if unknownb65d08b0:
                              if not _value:
                                  if 0 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                              else:
                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if not unknownb65d08b0 * _value / 10000:
                                      if 0 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not unknown0dde911dAddress:
                      if _to != 57005:
                          if unknownb65d08b0:
                              if not _value:
                                  if 0 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                              else:
                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if unknownb65d08b0 * _value / 10000:
                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if 0 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if unknown0dde911dAddress == caller:
                      if _to != 57005:
                          if unknownb65d08b0:
                              if _value:
                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if not unknownb65d08b0 * _value / 10000:
                                      if 0 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                  else:
                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if caller == owner:
                      if _to != 57005:
                          if unknownb65d08b0:
                              if _value:
                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if unknownb65d08b0 * _value / 10000:
                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                  else:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  uint8(stor11.field_160) = 1
                  unknownb65d08b0 = 0
                  if totalSupply:
                      if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
                          if unknown3ff8bf2e * totalSupply / 10000 < unknownd8248358:
                              Mask(248, 0, stor6.field_8) = unknownb65d08b0
                              uint8(stor11.field_160) = 0
                      else:
                          if balanceOf[addr(this.address)] < unknownd8248358:
                              Mask(248, 0, stor6.field_8) = unknownb65d08b0
                              uint8(stor11.field_160) = 0
                  else:
                      if balanceOf[addr(this.address)] > 0:
                          if 0 < unknownd8248358:
                              Mask(248, 0, stor6.field_8) = unknownb65d08b0
                              uint8(stor11.field_160) = 0
                              if _to != 57005:
                      else:
                          if balanceOf[addr(this.address)] < unknownd8248358:
                              Mask(248, 0, stor6.field_8) = unknownb65d08b0
                              uint8(stor11.field_160) = 0
                              if _to != 57005:
          else:
              if _value > 0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              62,
                              0x2e4c494f4e3a3a616e74695768616c653a205472616e7366657220616d6f756e74206578636565647320746865206d61785472616e73666572416d6f756e,
                              mem[226 len 2]
              if bool(unknown4a74bb02) != 1:
                  if 57005 == _to:
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not unknownb65d08b0:
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not _value:
                      if 0 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                  else:
                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if unknownb65d08b0 * _value / 10000:
                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                      else:
                          if 0 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
              else:
                  if uint8(stor11.field_160):
                      if 57005 == _to:
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if not unknownb65d08b0:
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if not _value:
                          if 0 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                      else:
                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if not unknownb65d08b0 * _value / 10000:
                              if 0 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                          else:
                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                  else:
                      if not unknowndeb74b1bAddress:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if unknownb65d08b0 * _value / 10000:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if not unknown0dde911dAddress:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if unknown0dde911dAddress == caller:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if unknownb65d08b0 * _value / 10000:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if caller == owner:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if _value:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      uint8(stor11.field_160) = 1
                      unknownb65d08b0 = 0
                      if not totalSupply:
                          if balanceOf[addr(this.address)] > 0:
                              if 0 < unknownd8248358:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if _to != 57005:
                          else:
                              if balanceOf[addr(this.address)] < unknownd8248358:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if _to != 57005:
                      else:
                          if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
                              if unknown3ff8bf2e * totalSupply / 10000 < unknownd8248358:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if _to != 57005:
                          else:
                              if balanceOf[addr(this.address)] < unknownd8248358:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if _to != 57005:
      else:
          if bool(unknown4a74bb02) != 1:
              if 57005 == _to:
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if not _to:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  35,
                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                  mem[199 len 29]
                  if _value > balanceOf[caller]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  balanceOf[caller] -= _value
                  if _value + balanceOf[_to] < balanceOf[_to]:
                      revert with 0, 'SafeMath: addition overflow'
                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                  log Transfer(
                        address from=_value,
                        address to=caller,
                        uint256 tokens=_to)
                  return 1
              if not unknownb65d08b0:
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if not _to:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  35,
                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                  mem[199 len 29]
                  if _value > balanceOf[caller]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  balanceOf[caller] -= _value
                  if _value + balanceOf[_to] < balanceOf[_to]:
                      revert with 0, 'SafeMath: addition overflow'
                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                  log Transfer(
                        address from=_value,
                        address to=caller,
                        uint256 tokens=_to)
                  return 1
              if not _value:
                  if 0 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not caller:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[caller]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=caller,
                            uint256 tokens=57005)
                      if not caller:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if not unknownb65d08b0 * _value / 10000:
                      if 0 > unknownb65d08b0 * _value / 10000:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[caller]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=caller,
                                uint256 tokens=57005)
                          if not caller:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  else:
                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                          balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                          if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                          log Transfer(
                                address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                address to=caller,
                                uint256 tokens=57005)
                          if not caller:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if uint8(stor11.field_160):
                  if 57005 == _to:
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not unknownb65d08b0:
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[caller] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=caller,
                            uint256 tokens=_to)
                      return 1
                  if not _value:
                      if 0 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not caller:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[caller]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=caller,
                                uint256 tokens=57005)
                          if not caller:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  else:
                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if not unknownb65d08b0 * _value / 10000:
                          if 0 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[caller]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=caller,
                                    uint256 tokens=57005)
                              if not caller:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                              if not this.address:
                                  revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      else:
                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                              balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                              if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                              log Transfer(
                                    address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                    address to=caller,
                                    uint256 tokens=57005)
                              if not caller:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
              else:
                  if not unknowndeb74b1bAddress:
                      if 57005 == _to:
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if not unknownb65d08b0:
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[caller] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=caller,
                                uint256 tokens=_to)
                          return 1
                      if not _value:
                          if 0 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not caller:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[caller]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=caller,
                                    uint256 tokens=57005)
                              if not caller:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                              if not this.address:
                                  revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                      else:
                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if not unknownb65d08b0 * _value / 10000:
                              if 0 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[caller]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=caller,
                                        uint256 tokens=57005)
                                  if not caller:
                                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          else:
                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                                  balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  log Transfer(
                                        address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                        address to=caller,
                                        uint256 tokens=57005)
                  else:
                      if not unknown0dde911dAddress:
                          if 57005 == _to:
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[caller] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=caller,
                                    uint256 tokens=_to)
                              return 1
                          if not unknownb65d08b0:
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[caller] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=caller,
                                    uint256 tokens=_to)
                              return 1
                          if not _value:
                              if 0 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not caller:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[caller]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=caller,
                                        uint256 tokens=57005)
                                  if not caller:
                                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          else:
                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if not unknownb65d08b0 * _value / 10000:
                                  if 0 > unknownb65d08b0 * _value / 10000:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if 0 <= balanceOf[caller]:
                                      if balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      log Transfer(
                                            address from=0,
                                            address to=caller,
                                            uint256 tokens=57005)
                              else:
                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                                      balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      log Transfer(
                                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                            address to=caller,
                                            uint256 tokens=57005)
                      else:
                          if unknown0dde911dAddress == caller:
                              if 57005 == _to:
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value > balanceOf[caller]:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  balanceOf[caller] -= _value
                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                  log Transfer(
                                        address from=_value,
                                        address to=caller,
                                        uint256 tokens=_to)
                                  return 1
                              if not unknownb65d08b0:
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value > balanceOf[caller]:
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                  balanceOf[caller] -= _value
                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                  log Transfer(
                                        address from=_value,
                                        address to=caller,
                                        uint256 tokens=_to)
                                  return 1
                              if not _value:
                                  if 0 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not caller:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if 0 <= balanceOf[caller]:
                                      if balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      log Transfer(
                                            address from=0,
                                            address to=caller,
                                            uint256 tokens=57005)
                              else:
                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if not unknownb65d08b0 * _value / 10000:
                                      if 0 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not caller:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[caller]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          log Transfer(
                                                address from=0,
                                                address to=caller,
                                                uint256 tokens=57005)
                                  else:
                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not caller:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                                          balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                          if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                          log Transfer(
                                                address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                                address to=caller,
                                                uint256 tokens=57005)
                          else:
                              if caller == owner:
                                  if 57005 == _to:
                                      if not caller:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value > balanceOf[caller]:
                                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                      balanceOf[caller] -= _value
                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                      log Transfer(
                                            address from=_value,
                                            address to=caller,
                                            uint256 tokens=_to)
                                      return 1
                                  if not unknownb65d08b0:
                                      if not caller:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value > balanceOf[caller]:
                                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                      balanceOf[caller] -= _value
                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                      log Transfer(
                                            address from=_value,
                                            address to=caller,
                                            uint256 tokens=_to)
                                      return 1
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not caller:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[caller]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not caller:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[caller]:
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not caller:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[caller]:
                                              balanceOf[caller] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                              else:
                                  uint8(stor11.field_160) = 1
                                  unknownb65d08b0 = 0
                                  if not totalSupply:
                                      if balanceOf[addr(this.address)] > 0:
                                          if 0 >= unknownd8248358:
                                              if stor9 > unknownd8248358:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              require ext_code.size(unknowndeb74b1bAddress)
                                              static call unknowndeb74b1bAddress.WETH() with:
                                                      gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              require return_data.size >= 32
                                              if not this.address:
                                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                              if not unknowndeb74b1bAddress:
                                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                              allowance[addr(this.address)][stor10] = stor9
                                              log Approval(
                                                    address tokenOwner=stor9,
                                                    address spender=this.address,
                                                    uint256 tokens=unknowndeb74b1bAddress)
                                          else:
                                              Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                              uint8(stor11.field_160) = 0
                                              if 57005 == _to:
                                                  if not caller:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value > balanceOf[caller]:
                                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                                  balanceOf[caller] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=caller,
                                                        uint256 tokens=_to)
                                                  return 1
                                              if unknownb65d08b0:
                                                  if _value:
                                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      33,
                                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                      mem[197 len 31]
                                                      if unknownb65d08b0 * _value / 10000:
                                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                          32,
                                                                          33,
                                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                          mem[197 len 31]
                                              else:
                                                  if not caller:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value <= balanceOf[caller]:
                                                      balanceOf[caller] -= _value
                                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                                          revert with 0, 'SafeMath: addition overflow'
                                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                      log Transfer(
                                                            address from=_value,
                                                            address to=caller,
                                                            uint256 tokens=_to)
                                      else:
                                          if balanceOf[addr(this.address)] >= unknownd8248358:
                                              if stor9 > unknownd8248358:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              require ext_code.size(unknowndeb74b1bAddress)
                                              static call unknowndeb74b1bAddress.WETH() with:
                                                      gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              require return_data.size >= 32
                                              if not this.address:
                                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                              if not unknowndeb74b1bAddress:
                                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                              allowance[addr(this.address)][stor10] = stor9
                                              log Approval(
                                                    address tokenOwner=stor9,
                                                    address spender=this.address,
                                                    uint256 tokens=unknowndeb74b1bAddress)
                                          else:
                                              Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                              uint8(stor11.field_160) = 0
                                              if 57005 == _to:
                                                  if not caller:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value > balanceOf[caller]:
                                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                                                  balanceOf[caller] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=caller,
                                                        uint256 tokens=_to)
                                                  return 1
                                              if unknownb65d08b0:
                                                  if _value:
                                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      33,
                                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                      mem[197 len 31]
                                                      if unknownb65d08b0 * _value / 10000:
                                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                          32,
                                                                          33,
                                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                          mem[197 len 31]
                                              else:
                                                  if not caller:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value <= balanceOf[caller]:
                                                      balanceOf[caller] -= _value
                                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                                          revert with 0, 'SafeMath: addition overflow'
                                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                      log Transfer(
                                                            address from=_value,
                                                            address to=caller,
                                                            uint256 tokens=_to)
                                  else:
                                      if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
                                          if unknown3ff8bf2e * totalSupply / 10000 >= unknownd8248358:
                                              if stor9 > unknownd8248358:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              require ext_code.size(unknowndeb74b1bAddress)
                                              static call unknowndeb74b1bAddress.WETH() with:
                                                      gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              require return_data.size >= 32
                                              if not this.address:
                                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                              if not unknowndeb74b1bAddress:
                                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                              allowance[addr(this.address)][stor10] = stor9
                                              log Approval(
                                                    address tokenOwner=stor9,
                                                    address spender=this.address,
                                                    uint256 tokens=unknowndeb74b1bAddress)
                                          else:
                                              Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                              uint8(stor11.field_160) = 0
                                              if 57005 == _to:
                                                  if not caller:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value <= balanceOf[caller]:
                                                      balanceOf[caller] -= _value
                                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                                          revert with 0, 'SafeMath: addition overflow'
                                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                      log Transfer(
                                                            address from=_value,
                                                            address to=caller,
                                                            uint256 tokens=_to)
                                              else:
                                                  if unknownb65d08b0:
                                                      if _value:
                                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                          32,
                                                                          33,
                                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                          mem[197 len 31]
                                                          if unknownb65d08b0 * _value / 10000:
                                                  else:
                                                      if not caller:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      37,
                                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                      mem[201 len 27]
                                                      if not _to:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      35,
                                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                      mem[199 len 29]
                                                      if _value <= balanceOf[caller]:
                                                          balanceOf[caller] -= _value
                                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                                              revert with 0, 'SafeMath: addition overflow'
                                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                          log Transfer(
                                                                address from=_value,
                                                                address to=caller,
                                                                uint256 tokens=_to)
                                      else:
                                          if balanceOf[addr(this.address)] >= unknownd8248358:
                                              if stor9 > unknownd8248358:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              require ext_code.size(unknowndeb74b1bAddress)
                                              static call unknowndeb74b1bAddress.WETH() with:
                                                      gas gas_remaining wei
                                              if not ext_call.success:
                                                  revert with ext_call.return_data[0 len return_data.size]
                                              require return_data.size >= 32
                                              if not this.address:
                                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                              if not unknowndeb74b1bAddress:
                                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                              allowance[addr(this.address)][stor10] = stor9
                                              log Approval(
                                                    address tokenOwner=stor9,
                                                    address spender=this.address,
                                                    uint256 tokens=unknowndeb74b1bAddress)
                                          else:
                                              Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                              uint8(stor11.field_160) = 0
                                              if 57005 == _to:
                                                  if not caller:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value <= balanceOf[caller]:
                                                      balanceOf[caller] -= _value
                                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                                          revert with 0, 'SafeMath: addition overflow'
                                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                      log Transfer(
                                                            address from=_value,
                                                            address to=caller,
                                                            uint256 tokens=_to)
                                              else:
                                                  if unknownb65d08b0:
                                                      if _value:
                                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                          32,
                                                                          33,
                                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                          mem[197 len 31]
                                                          if unknownb65d08b0 * _value / 10000:
                                                  else:
                                                      if not caller:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      37,
                                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                      mem[201 len 27]
                                                      if not _to:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      35,
                                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                      mem[199 len 29]
                                                      if _value <= balanceOf[caller]:
                                                          balanceOf[caller] -= _value
                                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                                              revert with 0, 'SafeMath: addition overflow'
                                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                          log Transfer(
                                                                address from=_value,
                                                                address to=caller,
                                                                uint256 tokens=_to)
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)

def transferFrom(address _from, address _to, uint256 _value): # not payable
  require calldata.size - 4 >= 96
  if not totalSupply:
      if bool(unknown4a74bb02) != 1:
          if 57005 == _to:
              if not _from:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[addr(_from)]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[addr(_from)] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=_from,
                    uint256 tokens=_to)
              if _value > allowance[addr(_from)][caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              if not _from:
                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
              if not caller:
                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
              allowance[addr(_from)][caller] -= _value
              log Approval(
                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                    address spender=_from,
                    uint256 tokens=caller)
              return 1
          if not unknownb65d08b0:
              if not _from:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if not _to:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              35,
                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                              mem[199 len 29]
              if _value > balanceOf[addr(_from)]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              balanceOf[addr(_from)] -= _value
              if _value + balanceOf[_to] < balanceOf[_to]:
                  revert with 0, 'SafeMath: addition overflow'
              balanceOf[addr(_to)] = _value + balanceOf[_to]
              log Transfer(
                    address from=_value,
                    address to=_from,
                    uint256 tokens=_to)
              if _value > allowance[addr(_from)][caller]:
                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
              if not _from:
                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
              if not caller:
                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
              allowance[addr(_from)][caller] -= _value
              log Approval(
                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                    address spender=_from,
                    uint256 tokens=caller)
              return 1
          if not _value:
              if 0 > _value:
                  revert with 0, 'SafeMath: subtraction overflow'
              if _value != _value:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                              mem[197 len 31]
              if not _from:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              37,
                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                              mem[201 len 27]
              if 0 <= balanceOf[addr(_from)]:
                  if balanceOf[57005] < balanceOf[57005]:
                      revert with 0, 'SafeMath: addition overflow'
                  log Transfer(
                        address from=0,
                        address to=_from,
                        uint256 tokens=57005)
                  if not _from:
                      revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  if not this.address:
                      revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
          else:
              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                              32,
                              33,
                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                              mem[197 len 31]
              if not unknownb65d08b0 * _value / 10000:
                  if 0 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not _from:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[addr(_from)]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=_from,
                            uint256 tokens=57005)
                      if not _from:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  34,
                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                  mem[198 len 30]
                  if unknownb65d08b0 * _value / 10000 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not _from:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                      balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                      log Transfer(
                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                            address to=_from,
                            uint256 tokens=57005)
                      if not _from:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
      else:
          if uint8(stor11.field_160):
              if 57005 == _to:
                  if not _from:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if not _to:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  35,
                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                  mem[199 len 29]
                  if _value > balanceOf[addr(_from)]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  balanceOf[addr(_from)] -= _value
                  if _value + balanceOf[_to] < balanceOf[_to]:
                      revert with 0, 'SafeMath: addition overflow'
                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                  log Transfer(
                        address from=_value,
                        address to=_from,
                        uint256 tokens=_to)
                  if _value > allowance[addr(_from)][caller]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if not _from:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                  if not caller:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                  allowance[addr(_from)][caller] -= _value
                  log Approval(
                        address tokenOwner=(allowance[addr(_from)][caller] - _value),
                        address spender=_from,
                        uint256 tokens=caller)
                  return 1
              if not unknownb65d08b0:
                  if not _from:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if not _to:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  35,
                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                  mem[199 len 29]
                  if _value > balanceOf[addr(_from)]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  balanceOf[addr(_from)] -= _value
                  if _value + balanceOf[_to] < balanceOf[_to]:
                      revert with 0, 'SafeMath: addition overflow'
                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                  log Transfer(
                        address from=_value,
                        address to=_from,
                        uint256 tokens=_to)
                  if _value > allowance[addr(_from)][caller]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if not _from:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                  if not caller:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                  allowance[addr(_from)][caller] -= _value
                  log Approval(
                        address tokenOwner=(allowance[addr(_from)][caller] - _value),
                        address spender=_from,
                        uint256 tokens=caller)
                  return 1
              if not _value:
                  if 0 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not _from:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[addr(_from)]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=_from,
                            uint256 tokens=57005)
                      if not _from:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if not unknownb65d08b0 * _value / 10000:
                      if 0 > unknownb65d08b0 * _value / 10000:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[addr(_from)]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=_from,
                                uint256 tokens=57005)
                          if not _from:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  else:
                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                          balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                          if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                          log Transfer(
                                address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                address to=_from,
                                uint256 tokens=57005)
                          if not _from:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
          else:
              if not unknowndeb74b1bAddress:
                  if 57005 == _to:
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[addr(_from)]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[addr(_from)] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=_from,
                            uint256 tokens=_to)
                      if _value > allowance[addr(_from)][caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not _from:
                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                      if not caller:
                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                      allowance[addr(_from)][caller] -= _value
                      log Approval(
                            address tokenOwner=(allowance[addr(_from)][caller] - _value),
                            address spender=_from,
                            uint256 tokens=caller)
                      return 1
                  if not unknownb65d08b0:
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[addr(_from)]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[addr(_from)] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=_from,
                            uint256 tokens=_to)
                      if _value > allowance[addr(_from)][caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not _from:
                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                      if not caller:
                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                      allowance[addr(_from)][caller] -= _value
                      log Approval(
                            address tokenOwner=(allowance[addr(_from)][caller] - _value),
                            address spender=_from,
                            uint256 tokens=caller)
                      return 1
                  if not _value:
                      if 0 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[addr(_from)]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=_from,
                                uint256 tokens=57005)
                          if not _from:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  else:
                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if not unknownb65d08b0 * _value / 10000:
                          if 0 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[addr(_from)]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=_from,
                                    uint256 tokens=57005)
                              if not _from:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      else:
                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                              if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                              log Transfer(
                                    address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                    address to=_from,
                                    uint256 tokens=57005)
              else:
                  if not unknown0dde911dAddress:
                      if 57005 == _to:
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not unknownb65d08b0:
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not _value:
                          if 0 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[addr(_from)]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=_from,
                                    uint256 tokens=57005)
                              if not _from:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      else:
                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if not unknownb65d08b0 * _value / 10000:
                              if 0 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[addr(_from)]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=_from,
                                        uint256 tokens=57005)
                          else:
                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                  balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  log Transfer(
                                        address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                        address to=_from,
                                        uint256 tokens=57005)
                  else:
                      if unknown0dde911dAddress == _from:
                          if 57005 == _to:
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[addr(_from)]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[addr(_from)] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=_from,
                                    uint256 tokens=_to)
                              if _value > allowance[addr(_from)][caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              if not caller:
                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                              allowance[addr(_from)][caller] -= _value
                              log Approval(
                                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                    address spender=_from,
                                    uint256 tokens=caller)
                              return 1
                          if not unknownb65d08b0:
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[addr(_from)]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[addr(_from)] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=_from,
                                    uint256 tokens=_to)
                              if _value > allowance[addr(_from)][caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              if not caller:
                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                              allowance[addr(_from)][caller] -= _value
                              log Approval(
                                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                    address spender=_from,
                                    uint256 tokens=caller)
                              return 1
                          if not _value:
                              if 0 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[addr(_from)]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=_from,
                                        uint256 tokens=57005)
                          else:
                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if not unknownb65d08b0 * _value / 10000:
                                  if 0 > unknownb65d08b0 * _value / 10000:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if 0 <= balanceOf[addr(_from)]:
                                      if balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      log Transfer(
                                            address from=0,
                                            address to=_from,
                                            uint256 tokens=57005)
                              else:
                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                      balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      log Transfer(
                                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                            address to=_from,
                                            uint256 tokens=57005)
                      else:
                          if _from == owner:
                              if _to != 57005:
                                  if unknownb65d08b0:
                                      if not _value:
                                          if 0 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                              if balanceOf[57005] < balanceOf[57005]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if not unknownb65d08b0 * _value / 10000:
                                              if 0 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              34,
                                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                              mem[198 len 30]
                                              if unknownb65d08b0 * _value / 10000 > _value:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if _value != _value:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                              mem[197 len 31]
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if 0 <= balanceOf[addr(_from)]:
                                          else:
                                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              34,
                                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                              mem[198 len 30]
                                              if unknownb65d08b0 * _value / 10000 > _value:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if _value != _value:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                              mem[197 len 31]
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[addr(_from)]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[addr(_from)] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=_from,
                                    uint256 tokens=_to)
                              if _value > allowance[addr(_from)][caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              if not caller:
                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                              allowance[addr(_from)][caller] -= _value
                              log Approval(
                                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                    address spender=_from,
                                    uint256 tokens=caller)
                              return 1
                          uint8(stor11.field_160) = 1
                          unknownb65d08b0 = 0
                          if not totalSupply:
                              if balanceOf[addr(this.address)] > 0:
                                  if 0 >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                      if not unknowndeb74b1bAddress:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                      allowance[addr(this.address)][stor10] = stor9
                                      log Approval(
                                            address tokenOwner=stor9,
                                            address spender=this.address,
                                            uint256 tokens=unknowndeb74b1bAddress)
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if unknownb65d08b0 * _value / 10000:
                                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      33,
                                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                      mem[197 len 31]
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                              else:
                                  if balanceOf[addr(this.address)] >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                      if not unknowndeb74b1bAddress:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                      allowance[addr(this.address)][stor10] = stor9
                                      log Approval(
                                            address tokenOwner=stor9,
                                            address spender=this.address,
                                            uint256 tokens=unknowndeb74b1bAddress)
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if unknownb65d08b0 * _value / 10000:
                                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      33,
                                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                      mem[197 len 31]
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                          else:
                              if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
                                  if unknown3ff8bf2e * totalSupply / 10000 >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                      if not unknowndeb74b1bAddress:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                      allowance[addr(this.address)][stor10] = stor9
                                      log Approval(
                                            address tokenOwner=stor9,
                                            address spender=this.address,
                                            uint256 tokens=unknowndeb74b1bAddress)
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if unknownb65d08b0 * _value / 10000:
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                              else:
                                  if balanceOf[addr(this.address)] >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                      if not unknowndeb74b1bAddress:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                      allowance[addr(this.address)][stor10] = stor9
                                      log Approval(
                                            address tokenOwner=stor9,
                                            address spender=this.address,
                                            uint256 tokens=unknowndeb74b1bAddress)
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if unknownb65d08b0 * _value / 10000:
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
  else:
      if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                      32,
                      33,
                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                      mem[197 len 31]
      if unknown3ff8bf2e * totalSupply / 10000 <= 0:
          if bool(unknown4a74bb02) != 1:
              if 57005 == _to:
                  if not _from:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if not _to:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  35,
                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                  mem[199 len 29]
                  if _value > balanceOf[addr(_from)]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  balanceOf[addr(_from)] -= _value
                  if _value + balanceOf[_to] < balanceOf[_to]:
                      revert with 0, 'SafeMath: addition overflow'
                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                  log Transfer(
                        address from=_value,
                        address to=_from,
                        uint256 tokens=_to)
                  if _value > allowance[addr(_from)][caller]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if not _from:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                  if not caller:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                  allowance[addr(_from)][caller] -= _value
                  log Approval(
                        address tokenOwner=(allowance[addr(_from)][caller] - _value),
                        address spender=_from,
                        uint256 tokens=caller)
                  return 1
              if not unknownb65d08b0:
                  if not _from:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if not _to:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  35,
                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                  mem[199 len 29]
                  if _value > balanceOf[addr(_from)]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  balanceOf[addr(_from)] -= _value
                  if _value + balanceOf[_to] < balanceOf[_to]:
                      revert with 0, 'SafeMath: addition overflow'
                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                  log Transfer(
                        address from=_value,
                        address to=_from,
                        uint256 tokens=_to)
                  if _value > allowance[addr(_from)][caller]:
                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                  if not _from:
                      revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                  if not caller:
                      revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                  allowance[addr(_from)][caller] -= _value
                  log Approval(
                        address tokenOwner=(allowance[addr(_from)][caller] - _value),
                        address spender=_from,
                        uint256 tokens=caller)
                  return 1
              if not _value:
                  if 0 > _value:
                      revert with 0, 'SafeMath: subtraction overflow'
                  if _value != _value:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                  mem[197 len 31]
                  if not _from:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  37,
                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                  mem[201 len 27]
                  if 0 <= balanceOf[addr(_from)]:
                      if balanceOf[57005] < balanceOf[57005]:
                          revert with 0, 'SafeMath: addition overflow'
                      log Transfer(
                            address from=0,
                            address to=_from,
                            uint256 tokens=57005)
                      if not _from:
                          revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      if not this.address:
                          revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
              else:
                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                  32,
                                  33,
                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                  mem[197 len 31]
                  if not unknownb65d08b0 * _value / 10000:
                      if 0 > unknownb65d08b0 * _value / 10000:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[addr(_from)]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=_from,
                                uint256 tokens=57005)
                          if not _from:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  else:
                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      34,
                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                      mem[198 len 30]
                      if unknownb65d08b0 * _value / 10000 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                          balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                          if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                          log Transfer(
                                address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                address to=_from,
                                uint256 tokens=57005)
                          if not _from:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
          else:
              if uint8(stor11.field_160):
                  if 57005 == _to:
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[addr(_from)]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[addr(_from)] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=_from,
                            uint256 tokens=_to)
                      if _value > allowance[addr(_from)][caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not _from:
                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                      if not caller:
                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                      allowance[addr(_from)][caller] -= _value
                      log Approval(
                            address tokenOwner=(allowance[addr(_from)][caller] - _value),
                            address spender=_from,
                            uint256 tokens=caller)
                      return 1
                  if not unknownb65d08b0:
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[addr(_from)]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[addr(_from)] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=_from,
                            uint256 tokens=_to)
                      if _value > allowance[addr(_from)][caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not _from:
                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                      if not caller:
                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                      allowance[addr(_from)][caller] -= _value
                      log Approval(
                            address tokenOwner=(allowance[addr(_from)][caller] - _value),
                            address spender=_from,
                            uint256 tokens=caller)
                      return 1
                  if not _value:
                      if 0 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[addr(_from)]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=_from,
                                uint256 tokens=57005)
                          if not _from:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                          if not this.address:
                              revert with 0, 32, 35, 0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573, mem[295 len 29]
                  else:
                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if not unknownb65d08b0 * _value / 10000:
                          if 0 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[addr(_from)]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=_from,
                                    uint256 tokens=57005)
                              if not _from:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      else:
                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                              if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                              log Transfer(
                                    address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                    address to=_from,
                                    uint256 tokens=57005)
              else:
                  if not unknowndeb74b1bAddress:
                      if 57005 == _to:
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not unknownb65d08b0:
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not _value:
                          if 0 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[addr(_from)]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=_from,
                                    uint256 tokens=57005)
                              if not _from:
                                  revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                      else:
                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if not unknownb65d08b0 * _value / 10000:
                              if 0 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[addr(_from)]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=_from,
                                        uint256 tokens=57005)
                          else:
                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                  balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  log Transfer(
                                        address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                        address to=_from,
                                        uint256 tokens=57005)
                  else:
                      if not unknown0dde911dAddress:
                          if 57005 == _to:
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[addr(_from)]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[addr(_from)] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=_from,
                                    uint256 tokens=_to)
                              if _value > allowance[addr(_from)][caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              if not caller:
                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                              allowance[addr(_from)][caller] -= _value
                              log Approval(
                                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                    address spender=_from,
                                    uint256 tokens=caller)
                              return 1
                          if not unknownb65d08b0:
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[addr(_from)]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[addr(_from)] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=_from,
                                    uint256 tokens=_to)
                              if _value > allowance[addr(_from)][caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              if not caller:
                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                              allowance[addr(_from)][caller] -= _value
                              log Approval(
                                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                    address spender=_from,
                                    uint256 tokens=caller)
                              return 1
                          if not _value:
                              if 0 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[addr(_from)]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=_from,
                                        uint256 tokens=57005)
                          else:
                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if not unknownb65d08b0 * _value / 10000:
                                  if 0 > unknownb65d08b0 * _value / 10000:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if 0 <= balanceOf[addr(_from)]:
                                      if balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      log Transfer(
                                            address from=0,
                                            address to=_from,
                                            uint256 tokens=57005)
                              else:
                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                  mem[197 len 31]
                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  34,
                                                  0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                  mem[198 len 30]
                                  if unknownb65d08b0 * _value / 10000 > _value:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                      balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                      log Transfer(
                                            address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                            address to=_from,
                                            uint256 tokens=57005)
                      else:
                          if unknown0dde911dAddress == _from:
                              if _to != 57005:
                                  if unknownb65d08b0:
                                      if not _value:
                                          if 0 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                              if balanceOf[57005] < balanceOf[57005]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              log Transfer(
                                                    address from=0,
                                                    address to=_from,
                                                    uint256 tokens=57005)
                                      else:
                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if not unknownb65d08b0 * _value / 10000:
                                              if 0 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              34,
                                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                              mem[198 len 30]
                                              if unknownb65d08b0 * _value / 10000 > _value:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if _value != _value:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                              mem[197 len 31]
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if 0 <= balanceOf[addr(_from)]:
                                                  if balanceOf[57005] < balanceOf[57005]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  log Transfer(
                                                        address from=0,
                                                        address to=_from,
                                                        uint256 tokens=57005)
                                          else:
                                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              34,
                                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                              mem[198 len 30]
                                              if unknownb65d08b0 * _value / 10000 > _value:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if _value != _value:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                              mem[197 len 31]
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                                  if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[addr(_from)]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[addr(_from)] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=_from,
                                    uint256 tokens=_to)
                              if _value > allowance[addr(_from)][caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              if not caller:
                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                              allowance[addr(_from)][caller] -= _value
                              log Approval(
                                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                    address spender=_from,
                                    uint256 tokens=caller)
                              return 1
                          if _from == owner:
                              if _to != 57005:
                                  if unknownb65d08b0:
                                      if not _value:
                                          if 0 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                      else:
                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if not unknownb65d08b0 * _value / 10000:
                                              if 0 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                          else:
                                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                      ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value > balanceOf[addr(_from)]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              balanceOf[addr(_from)] -= _value
                              if _value + balanceOf[_to] < balanceOf[_to]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                              log Transfer(
                                    address from=_value,
                                    address to=_from,
                                    uint256 tokens=_to)
                              if _value > allowance[addr(_from)][caller]:
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                              if not _from:
                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              if not caller:
                                  revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                              allowance[addr(_from)][caller] -= _value
                              log Approval(
                                    address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                    address spender=_from,
                                    uint256 tokens=caller)
                              return 1
                          uint8(stor11.field_160) = 1
                          unknownb65d08b0 = 0
                          if not totalSupply:
                              if balanceOf[addr(this.address)] > 0:
                                  if 0 >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                      if not unknowndeb74b1bAddress:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                      allowance[addr(this.address)][stor10] = stor9
                                      log Approval(
                                            address tokenOwner=stor9,
                                            address spender=this.address,
                                            uint256 tokens=unknowndeb74b1bAddress)
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if unknownb65d08b0 * _value / 10000:
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                              else:
                                  if balanceOf[addr(this.address)] >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                      if not unknowndeb74b1bAddress:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
                                      allowance[addr(this.address)][stor10] = stor9
                                      log Approval(
                                            address tokenOwner=stor9,
                                            address spender=this.address,
                                            uint256 tokens=unknowndeb74b1bAddress)
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if unknownb65d08b0 * _value / 10000:
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                          else:
                              if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
                                  if unknown3ff8bf2e * totalSupply / 10000 >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                              else:
                                  if balanceOf[addr(this.address)] >= unknownd8248358:
                                      if stor9 > unknownd8248358:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      require ext_code.size(unknowndeb74b1bAddress)
                                      static call unknowndeb74b1bAddress.WETH() with:
                                              gas gas_remaining wei
                                      if not ext_call.success:
                                          revert with ext_call.return_data[0 len return_data.size]
                                      require return_data.size >= 32
                                      if not this.address:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
                                  else:
                                      Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                      uint8(stor11.field_160) = 0
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
      else:
          if stor7[addr(_from)]:
              if bool(unknown4a74bb02) != 1:
                  if 57005 == _to:
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[addr(_from)]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[addr(_from)] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=_from,
                            uint256 tokens=_to)
                      if _value > allowance[addr(_from)][caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not _from:
                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                      if not caller:
                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                      allowance[addr(_from)][caller] -= _value
                      log Approval(
                            address tokenOwner=(allowance[addr(_from)][caller] - _value),
                            address spender=_from,
                            uint256 tokens=caller)
                      return 1
                  if not unknownb65d08b0:
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if not _to:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      35,
                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                      mem[199 len 29]
                      if _value > balanceOf[addr(_from)]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      balanceOf[addr(_from)] -= _value
                      if _value + balanceOf[_to] < balanceOf[_to]:
                          revert with 0, 'SafeMath: addition overflow'
                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                      log Transfer(
                            address from=_value,
                            address to=_from,
                            uint256 tokens=_to)
                      if _value > allowance[addr(_from)][caller]:
                          ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                      if not _from:
                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                      if not caller:
                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                      allowance[addr(_from)][caller] -= _value
                      log Approval(
                            address tokenOwner=(allowance[addr(_from)][caller] - _value),
                            address spender=_from,
                            uint256 tokens=caller)
                      return 1
                  if not _value:
                      if 0 > _value:
                          revert with 0, 'SafeMath: subtraction overflow'
                      if _value != _value:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                      mem[197 len 31]
                      if not _from:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      37,
                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                      mem[201 len 27]
                      if 0 <= balanceOf[addr(_from)]:
                          if balanceOf[57005] < balanceOf[57005]:
                              revert with 0, 'SafeMath: addition overflow'
                          log Transfer(
                                address from=0,
                                address to=_from,
                                uint256 tokens=57005)
                          if not _from:
                              revert with 0, 32, 37, 0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573, mem[297 len 27]
                  else:
                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if not unknownb65d08b0 * _value / 10000:
                          if 0 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[addr(_from)]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=_from,
                                    uint256 tokens=57005)
                      else:
                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          34,
                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                          mem[198 len 30]
                          if unknownb65d08b0 * _value / 10000 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                              if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                              log Transfer(
                                    address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                    address to=_from,
                                    uint256 tokens=57005)
              else:
                  if uint8(stor11.field_160):
                      if 57005 == _to:
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not unknownb65d08b0:
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not _value:
                          if 0 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[addr(_from)]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=_from,
                                    uint256 tokens=57005)
                      else:
                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if not unknownb65d08b0 * _value / 10000:
                              if 0 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[addr(_from)]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=_from,
                                        uint256 tokens=57005)
                          else:
                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                  balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  log Transfer(
                                        address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                        address to=_from,
                                        uint256 tokens=57005)
                  else:
                      if not unknowndeb74b1bAddress:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[addr(_from)]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          log Transfer(
                                                address from=0,
                                                address to=_from,
                                                uint256 tokens=57005)
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                              if balanceOf[57005] < balanceOf[57005]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              log Transfer(
                                                    address from=0,
                                                    address to=_from,
                                                    uint256 tokens=57005)
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                              if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not unknown0dde911dAddress:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[addr(_from)]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          log Transfer(
                                                address from=0,
                                                address to=_from,
                                                uint256 tokens=57005)
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                              if balanceOf[57005] < balanceOf[57005]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if unknown0dde911dAddress == _from:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[addr(_from)]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if _from == owner:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if unknownb65d08b0 * _value / 10000:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      uint8(stor11.field_160) = 1
                      unknownb65d08b0 = 0
                      if not totalSupply:
                          if balanceOf[addr(this.address)] > 0:
                              if 0 >= unknownd8248358:
                                  if stor9 > unknownd8248358:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  require ext_code.size(unknowndeb74b1bAddress)
                                  static call unknowndeb74b1bAddress.WETH() with:
                                          gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                              else:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if 57005 == _to:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                  else:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                          else:
                              if balanceOf[addr(this.address)] >= unknownd8248358:
                                  if stor9 > unknownd8248358:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  require ext_code.size(unknowndeb74b1bAddress)
                                  static call unknowndeb74b1bAddress.WETH() with:
                                          gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                              else:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if 57005 == _to:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                  else:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                      else:
                          if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
                              if unknown3ff8bf2e * totalSupply / 10000 >= unknownd8248358:
                                  if stor9 > unknownd8248358:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  require ext_code.size(unknowndeb74b1bAddress)
                                  static call unknowndeb74b1bAddress.WETH() with:
                                          gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                              else:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if 57005 == _to:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                  else:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                          else:
                              if balanceOf[addr(this.address)] >= unknownd8248358:
                                  if stor9 > unknownd8248358:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  require ext_code.size(unknowndeb74b1bAddress)
                                  static call unknowndeb74b1bAddress.WETH() with:
                                          gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                              else:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if 57005 == _to:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                  else:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
          else:
              if not stor7[addr(_to)]:
                  if not totalSupply:
                      if _value > 0:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      62,
                                      0x2e4c494f4e3a3a616e74695768616c653a205472616e7366657220616d6f756e74206578636565647320746865206d61785472616e73666572416d6f756e,
                                      mem[226 len 2]
                      if bool(unknown4a74bb02) != 1:
                          if 57005 == _to:
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value <= balanceOf[addr(_from)]:
                                  balanceOf[addr(_from)] -= _value
                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                  log Transfer(
                                        address from=_value,
                                        address to=_from,
                                        uint256 tokens=_to)
                                  if _value <= allowance[addr(_from)][caller]:
                                      if not _from:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                                      if not caller:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                                      allowance[addr(_from)][caller] -= _value
                                      log Approval(
                                            address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                            address spender=_from,
                                            uint256 tokens=caller)
                          else:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if unknownb65d08b0 * _value / 10000:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                              else:
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value <= balanceOf[addr(_from)]:
                                      balanceOf[addr(_from)] -= _value
                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                      log Transfer(
                                            address from=_value,
                                            address to=_from,
                                            uint256 tokens=_to)
                                      if _value <= allowance[addr(_from)][caller]:
                                          if not _from:
                                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                                          if not caller:
                                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                                          allowance[addr(_from)][caller] -= _value
                                          log Approval(
                                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                                address spender=_from,
                                                uint256 tokens=caller)
                      else:
                          if uint8(stor11.field_160):
                              if _to != 57005:
                                  if unknownb65d08b0:
                                      if _value:
                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if not unknownb65d08b0 * _value / 10000:
                                              if 0 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              34,
                                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                              mem[198 len 30]
                                          else:
                                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                          if _value <= allowance[addr(_from)][caller]:
                                              if not _from:
                                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              else:
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value <= balanceOf[addr(_from)]:
                                      balanceOf[addr(_from)] -= _value
                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                      log Transfer(
                                            address from=_value,
                                            address to=_from,
                                            uint256 tokens=_to)
                                      if _value <= allowance[addr(_from)][caller]:
                                          if not _from:
                                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                                          if not caller:
                                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                                          allowance[addr(_from)][caller] -= _value
                                          log Approval(
                                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                                address spender=_from,
                                                uint256 tokens=caller)
                          else:
                              if not unknowndeb74b1bAddress:
                                  if 57005 == _to:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                          if _value <= allowance[addr(_from)][caller]:
                                              if not _from:
                                                  revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                                  else:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if unknownb65d08b0 * _value / 10000:
                                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                                      revert with 0, 'SafeMath: subtraction overflow'
                                              else:
                                                  if 0 > unknownb65d08b0 * _value / 10000:
                                                      revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                              if _value <= allowance[addr(_from)][caller]:
                              else:
                                  if not unknown0dde911dAddress:
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                              if _value <= allowance[addr(_from)][caller]:
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if not unknownb65d08b0 * _value / 10000:
                                                      if 0 > unknownb65d08b0 * _value / 10000:
                                                          revert with 0, 'SafeMath: subtraction overflow'
                                                  else:
                                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      33,
                                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                      mem[197 len 31]
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                                  else:
                                      if unknown0dde911dAddress == _from:
                                          if 57005 == _to:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                                          else:
                                              if unknownb65d08b0:
                                                  if _value:
                                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      33,
                                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                      mem[197 len 31]
                                                      if unknownb65d08b0 * _value / 10000:
                                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                          32,
                                                                          33,
                                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                          mem[197 len 31]
                                                      else:
                                              else:
                                                  if not _from:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value <= balanceOf[addr(_from)]:
                                                      balanceOf[addr(_from)] -= _value
                                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                                          revert with 0, 'SafeMath: addition overflow'
                                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                      log Transfer(
                                                            address from=_value,
                                                            address to=_from,
                                                            uint256 tokens=_to)
                                      else:
                                          if _from != owner:
                                              uint8(stor11.field_160) = 1
                                              unknownb65d08b0 = 0
                                              if totalSupply:
                                                  if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if balanceOf[addr(this.address)] <= unknown3ff8bf2e * totalSupply / 10000:
                                              else:
                                                  if balanceOf[addr(this.address)] > 0:
                                                      if 0 < unknownd8248358:
                                                          Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                                          uint8(stor11.field_160) = 0
                                                  else:
                                                      if balanceOf[addr(this.address)] < unknownd8248358:
                                                          Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                                          uint8(stor11.field_160) = 0
                                          else:
                                              if 57005 == _to:
                                                  if not _from:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value <= balanceOf[addr(_from)]:
                                                      balanceOf[addr(_from)] -= _value
                                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                                          revert with 0, 'SafeMath: addition overflow'
                                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                      log Transfer(
                                                            address from=_value,
                                                            address to=_from,
                                                            uint256 tokens=_to)
                                              else:
                                                  if unknownb65d08b0:
                                                      if _value:
                                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                          32,
                                                                          33,
                                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                          mem[197 len 31]
                                                          if unknownb65d08b0 * _value / 10000:
                                                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                              32,
                                                                              33,
                                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                              mem[197 len 31]
                                                  else:
                                                      if not _from:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      37,
                                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                      mem[201 len 27]
                                                      if not _to:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      35,
                                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                      mem[199 len 29]
                                                      if _value <= balanceOf[addr(_from)]:
                                                          balanceOf[addr(_from)] -= _value
                                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                                              revert with 0, 'SafeMath: addition overflow'
                                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                          log Transfer(
                                                                address from=_value,
                                                                address to=_from,
                                                                uint256 tokens=_to)
                  else:
                      if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      33,
                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                      mem[197 len 31]
                      if _value > unknown3ff8bf2e * totalSupply / 10000:
                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                      32,
                                      62,
                                      0x2e4c494f4e3a3a616e74695768616c653a205472616e7366657220616d6f756e74206578636565647320746865206d61785472616e73666572416d6f756e,
                                      mem[226 len 2]
                      if bool(unknown4a74bb02) != 1:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if _value:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                              else:
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value <= balanceOf[addr(_from)]:
                                      balanceOf[addr(_from)] -= _value
                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                      log Transfer(
                                            address from=_value,
                                            address to=_from,
                                            uint256 tokens=_to)
                                      if _value <= allowance[addr(_from)][caller]:
                                          if not _from:
                                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          else:
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if not _to:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              35,
                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                              mem[199 len 29]
                              if _value <= balanceOf[addr(_from)]:
                                  balanceOf[addr(_from)] -= _value
                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                  log Transfer(
                                        address from=_value,
                                        address to=_from,
                                        uint256 tokens=_to)
                                  if _value <= allowance[addr(_from)][caller]:
                                      if not _from:
                                          revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                                      if not caller:
                                          revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                                      allowance[addr(_from)][caller] -= _value
                                      log Approval(
                                            address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                            address spender=_from,
                                            uint256 tokens=caller)
                      else:
                          if uint8(stor11.field_160):
                              if 57005 == _to:
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  if not _to:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  35,
                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                  mem[199 len 29]
                                  if _value <= balanceOf[addr(_from)]:
                                      balanceOf[addr(_from)] -= _value
                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                          revert with 0, 'SafeMath: addition overflow'
                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                      log Transfer(
                                            address from=_value,
                                            address to=_from,
                                            uint256 tokens=_to)
                                      if _value <= allowance[addr(_from)][caller]:
                                          if not _from:
                                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                              else:
                                  if unknownb65d08b0:
                                      if _value:
                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if unknownb65d08b0 * _value / 10000:
                                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                          else:
                                              if 0 > unknownb65d08b0 * _value / 10000:
                                                  revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                          if _value <= allowance[addr(_from)][caller]:
                          else:
                              if not unknowndeb74b1bAddress:
                                  if 57005 == _to:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                          if _value <= allowance[addr(_from)][caller]:
                                  else:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                              if not unknownb65d08b0 * _value / 10000:
                                                  if 0 > unknownb65d08b0 * _value / 10000:
                                                      revert with 0, 'SafeMath: subtraction overflow'
                                              else:
                                                  if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                              else:
                                  if not unknown0dde911dAddress:
                                      if 57005 == _to:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                                      else:
                                          if unknownb65d08b0:
                                              if _value:
                                                  if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                                  if unknownb65d08b0 * _value / 10000:
                                                      if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      33,
                                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                      mem[197 len 31]
                                                  else:
                                          else:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                                  else:
                                      if unknown0dde911dAddress == _from:
                                          if 57005 == _to:
                                              if not _from:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              37,
                                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                              mem[201 len 27]
                                              if not _to:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              35,
                                                              0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                              mem[199 len 29]
                                              if _value <= balanceOf[addr(_from)]:
                                                  balanceOf[addr(_from)] -= _value
                                                  if _value + balanceOf[_to] < balanceOf[_to]:
                                                      revert with 0, 'SafeMath: addition overflow'
                                                  balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                  log Transfer(
                                                        address from=_value,
                                                        address to=_from,
                                                        uint256 tokens=_to)
                                          else:
                                              if unknownb65d08b0:
                                                  if _value:
                                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      33,
                                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                      mem[197 len 31]
                                                      if unknownb65d08b0 * _value / 10000:
                                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                          32,
                                                                          33,
                                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                          mem[197 len 31]
                                              else:
                                                  if not _from:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value <= balanceOf[addr(_from)]:
                                                      balanceOf[addr(_from)] -= _value
                                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                                          revert with 0, 'SafeMath: addition overflow'
                                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                      log Transfer(
                                                            address from=_value,
                                                            address to=_from,
                                                            uint256 tokens=_to)
                                      else:
                                          if _from != owner:
                                              uint8(stor11.field_160) = 1
                                              unknownb65d08b0 = 0
                                              if totalSupply:
                                                  if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  33,
                                                                  0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                  mem[197 len 31]
                                              else:
                                                  if balanceOf[addr(this.address)] <= 0:
                                          else:
                                              if 57005 == _to:
                                                  if not _from:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  37,
                                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                  mem[201 len 27]
                                                  if not _to:
                                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                  32,
                                                                  35,
                                                                  0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                  mem[199 len 29]
                                                  if _value <= balanceOf[addr(_from)]:
                                                      balanceOf[addr(_from)] -= _value
                                                      if _value + balanceOf[_to] < balanceOf[_to]:
                                                          revert with 0, 'SafeMath: addition overflow'
                                                      balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                      log Transfer(
                                                            address from=_value,
                                                            address to=_from,
                                                            uint256 tokens=_to)
                                              else:
                                                  if unknownb65d08b0:
                                                      if _value:
                                                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                          32,
                                                                          33,
                                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                          mem[197 len 31]
                                                          if unknownb65d08b0 * _value / 10000:
                                                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                              32,
                                                                              33,
                                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                              mem[197 len 31]
                                                  else:
                                                      if not _from:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      37,
                                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                                      mem[201 len 27]
                                                      if not _to:
                                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                      32,
                                                                      35,
                                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                                      mem[199 len 29]
                                                      if _value <= balanceOf[addr(_from)]:
                                                          balanceOf[addr(_from)] -= _value
                                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                                              revert with 0, 'SafeMath: addition overflow'
                                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                                          log Transfer(
                                                                address from=_value,
                                                                address to=_from,
                                                                uint256 tokens=_to)
              else:
                  if bool(unknown4a74bb02) != 1:
                      if 57005 == _to:
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not unknownb65d08b0:
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not _value:
                          if 0 > _value:
                              revert with 0, 'SafeMath: subtraction overflow'
                          if _value != _value:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                          mem[197 len 31]
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if 0 <= balanceOf[addr(_from)]:
                              if balanceOf[57005] < balanceOf[57005]:
                                  revert with 0, 'SafeMath: addition overflow'
                              log Transfer(
                                    address from=0,
                                    address to=_from,
                                    uint256 tokens=57005)
                      else:
                          if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if not unknownb65d08b0 * _value / 10000:
                              if 0 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if 0 <= balanceOf[addr(_from)]:
                                  if balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  log Transfer(
                                        address from=0,
                                        address to=_from,
                                        uint256 tokens=57005)
                          else:
                              if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                              mem[197 len 31]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              34,
                                              0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                              mem[198 len 30]
                              if unknownb65d08b0 * _value / 10000 > _value:
                                  revert with 0, 'SafeMath: subtraction overflow'
                              if _value != _value:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              33,
                                              0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                              mem[197 len 31]
                              if not _from:
                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                              32,
                                              37,
                                              0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                              mem[201 len 27]
                              if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                  balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                      revert with 0, 'SafeMath: addition overflow'
                                  balanceOf[57005] += burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  log Transfer(
                                        address from=(burnRate * unknownb65d08b0 * _value / 10000 / 100),
                                        address to=_from,
                                        uint256 tokens=57005)
                  else:
                      if uint8(stor11.field_160):
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[addr(_from)]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          log Transfer(
                                                address from=0,
                                                address to=_from,
                                                uint256 tokens=57005)
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                              if balanceOf[57005] < balanceOf[57005]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              log Transfer(
                                                    address from=0,
                                                    address to=_from,
                                                    uint256 tokens=57005)
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                              if (burnRate * unknownb65d08b0 * _value / 10000 / 100) + balanceOf[57005] < balanceOf[57005]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not unknowndeb74b1bAddress:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[addr(_from)]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          log Transfer(
                                                address from=0,
                                                address to=_from,
                                                uint256 tokens=57005)
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                              if balanceOf[57005] < balanceOf[57005]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if not unknown0dde911dAddress:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[addr(_from)]:
                                          if balanceOf[57005] < balanceOf[57005]:
                                              revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if 0 <= balanceOf[addr(_from)]:
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          34,
                                                          0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                          mem[198 len 30]
                                          if unknownb65d08b0 * _value / 10000 > _value:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                          if _value != _value:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                          mem[197 len 31]
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= burnRate * unknownb65d08b0 * _value / 10000 / 100
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if unknown0dde911dAddress == _from:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if 0 <= balanceOf[addr(_from)]:
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                      if _value != _value:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                      mem[197 len 31]
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      if _from == owner:
                          if _to != 57005:
                              if unknownb65d08b0:
                                  if not _value:
                                      if 0 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  else:
                                      if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      33,
                                                      0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                      mem[197 len 31]
                                      if not unknownb65d08b0 * _value / 10000:
                                          if 0 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      else:
                                          if burnRate * unknownb65d08b0 * _value / 10000 / unknownb65d08b0 * _value / 10000 != burnRate:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          33,
                                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                          mem[197 len 31]
                                          if burnRate * unknownb65d08b0 * _value / 10000 / 100 > unknownb65d08b0 * _value / 10000:
                                              revert with 0, 'SafeMath: subtraction overflow'
                                      if unknownb65d08b0 * _value / 10000 != unknownb65d08b0 * _value / 10000:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      34,
                                                      0x734c494f4e3a3a7472616e736665723a204275726e2076616c756520696e76616c69,
                                                      mem[198 len 30]
                                      if unknownb65d08b0 * _value / 10000 > _value:
                                          revert with 0, 'SafeMath: subtraction overflow'
                                  if _value != _value:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  33,
                                                  0x734c494f4e3a3a7472616e736665723a205461782076616c756520696e76616c69,
                                                  mem[197 len 31]
                                  if not _from:
                                      revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                  32,
                                                  37,
                                                  0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                  mem[201 len 27]
                                  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          37,
                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                          mem[201 len 27]
                          if not _to:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          35,
                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                          mem[199 len 29]
                          if _value > balanceOf[addr(_from)]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          balanceOf[addr(_from)] -= _value
                          if _value + balanceOf[_to] < balanceOf[_to]:
                              revert with 0, 'SafeMath: addition overflow'
                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                          log Transfer(
                                address from=_value,
                                address to=_from,
                                uint256 tokens=_to)
                          if _value > allowance[addr(_from)][caller]:
                              ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)
                          if not _from:
                              revert with 0, 32, 36, 0x2e42455032303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
                          if not caller:
                              revert with 0, 32, 34, 0x6442455032303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
                          allowance[addr(_from)][caller] -= _value
                          log Approval(
                                address tokenOwner=(allowance[addr(_from)][caller] - _value),
                                address spender=_from,
                                uint256 tokens=caller)
                          return 1
                      uint8(stor11.field_160) = 1
                      unknownb65d08b0 = 0
                      if totalSupply:
                          if unknown3ff8bf2e * totalSupply / totalSupply != unknown3ff8bf2e:
                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                          32,
                                          33,
                                          0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                          mem[197 len 31]
                          if balanceOf[addr(this.address)] > unknown3ff8bf2e * totalSupply / 10000:
                              if unknown3ff8bf2e * totalSupply / 10000 >= unknownd8248358:
                                  if stor9 > unknownd8248358:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  require ext_code.size(unknowndeb74b1bAddress)
                                  static call unknowndeb74b1bAddress.WETH() with:
                                          gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                              else:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if _to != 57005:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                          else:
                              if balanceOf[addr(this.address)] >= unknownd8248358:
                                  if stor9 > unknownd8248358:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  require ext_code.size(unknowndeb74b1bAddress)
                                  static call unknowndeb74b1bAddress.WETH() with:
                                          gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                              else:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if _to != 57005:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                  else:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                      else:
                          if balanceOf[addr(this.address)] > 0:
                              if 0 >= unknownd8248358:
                                  if stor9 > unknownd8248358:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  require ext_code.size(unknowndeb74b1bAddress)
                                  static call unknowndeb74b1bAddress.WETH() with:
                                          gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                              else:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if 57005 == _to:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                  else:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
                          else:
                              if balanceOf[addr(this.address)] >= unknownd8248358:
                                  if stor9 > unknownd8248358:
                                      revert with 0, 'SafeMath: subtraction overflow'
                                  require ext_code.size(unknowndeb74b1bAddress)
                                  static call unknowndeb74b1bAddress.WETH() with:
                                          gas gas_remaining wei
                                  if not ext_call.success:
                                      revert with ext_call.return_data[0 len return_data.size]
                                  require return_data.size >= 32
                              else:
                                  Mask(248, 0, stor6.field_8) = unknownb65d08b0
                                  uint8(stor11.field_160) = 0
                                  if 57005 == _to:
                                      if not _from:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      37,
                                                      0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                      mem[201 len 27]
                                      if not _to:
                                          revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                      32,
                                                      35,
                                                      0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                      mem[199 len 29]
                                      if _value <= balanceOf[addr(_from)]:
                                          balanceOf[addr(_from)] -= _value
                                          if _value + balanceOf[_to] < balanceOf[_to]:
                                              revert with 0, 'SafeMath: addition overflow'
                                          balanceOf[addr(_to)] = _value + balanceOf[_to]
                                          log Transfer(
                                                address from=_value,
                                                address to=_from,
                                                uint256 tokens=_to)
                                  else:
                                      if unknownb65d08b0:
                                          if _value:
                                              if unknownb65d08b0 * _value / _value != unknownb65d08b0:
                                                  revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                              32,
                                                              33,
                                                              0x74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                              mem[197 len 31]
                                      else:
                                          if not _from:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          37,
                                                          0xfe42455032303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                                                          mem[201 len 27]
                                          if not _to:
                                              revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                          32,
                                                          35,
                                                          0x6542455032303a207472616e7366657220746f20746865207a65726f20616464726573,
                                                          mem[199 len 29]
                                          if _value <= balanceOf[addr(_from)]:
                                              balanceOf[addr(_from)] -= _value
                                              if _value + balanceOf[_to] < balanceOf[_to]:
                                                  revert with 0, 'SafeMath: addition overflow'
                                              balanceOf[addr(_to)] = _value + balanceOf[_to]
                                              log Transfer(
                                                    address from=_value,
                                                    address to=_from,
                                                    uint256 tokens=_to)
  ...  # Decompilation aborted, sorry: ("decompilation didn't finish",)


